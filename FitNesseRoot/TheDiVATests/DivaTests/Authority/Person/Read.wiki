---
Test
---
!contents -R2 -g -p -f -h
!2 Läsa
Det skall gå att läsa personer via REST API:et och i svaret få med vilka rättigheter den inloggade användaren har både på post och delpostnivå.

!style_red[Kontrollera actionLinks för personer, eftersom vi ännu inte implementerat stöd för att radera en personer, eller läsa incomingLinks från DiVA powered by Cora, så är dessa inte med.]

!***> Läs personer som divaEverything via den och se att fälten är med i svaret

Personpost är byggt med en superpost (personpost) och en subpost (personDomainPart)

!define currentAuthToken {$adminAuthToken}

!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!define expectedExistFieldsResult {OK}
!include -seamless .HelperPages.readCheck
#!include -seamless .HelperPages.existsFieldsOnRecord

*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Kth
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Test
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!

Det ska gå att läsa alla mjöliga kombinationer av personpost som det går att skapa i Classic. Följande fall täcker alla varianter som vi kan forvänta oss att läsa från fedora

 * '''Fall 1:''' Det ska gå att läsa en personpost som är markerat som icke-publikt men som är fullt ifylld så att vi kan se att inget som inte ska komma ut kommer ut, ska det finnas minst en affiliering
 * '''Fall 2:''' Det ska gå att läsa en personpost som är markerat som publikt som är fullt ifylld, ska det finnas minst två personDomainParts med affilieringar
 * '''Fall 3:''' Det ska gå att läsa en personpost som är markerat som publikt men som inte har någon kopplat personDomainPart
 * '''Fall 4:''' Det ska gå att läsa en personpost som har bara det nödvändigaste ifylld ur Cora-perspektiv
 * '''Fall 5:''' Det ska gå att läsa en personpost som bara har det nödvändigaste ifylld ur Classic-perspektiv.
   * '''Fall 5.1:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, alla fält är tomma.
   * '''Fall 5.2:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara ORCID 
   * '''Fall 5.3:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara lokalt ID  
   * '''Fall 5.4:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara last name
   * '''Fall 5.5:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara first name  
   * '''Fall 5.6:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara alternative last name
   * '''Fall 5.7:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara alternative first name
   * '''Fall 5.8:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara email
 * '''Fall 6:''' Det ska gå att läsa en personpost som är så fel ur Cora-perspektiv vi kan tänka oss kan finnas i Classic. Den behöver inte gå att spara i Cora. (T.ex. ORCID som inte är ORCID, mejl som inte är mejl, URL som inte är URL, etc.)
 * '''Fall 7:''' Det ska inte gå att läsa en personpost som är *raderad*
 * '''Fall 8:''' Det ska gå att läsa en personpost som har en lokal identifikator men inga affilierade organisationer
 * '''Fall 9:''' Det ska gå att läsa en personpost som har ingen lokal identifikator men affilierade organisationer
 
!***> Alla fall
!***> '''Fall 1:'''
!***> Läs personpost

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | person | authority-person:111 | | OK |

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson111
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart111Uu
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck

*!
!***> Läs personDomainPart
!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | personDomainPart | authority-person:111:test | | OK |

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart111Test
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> '''Fall 2:'''
!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson112
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart112Uu
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> '''Fall 3:'''
!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | person | authority-person:110 | | OK |

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson110
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 4:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson115

!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.1:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson107
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.2:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson108
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.3:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson109
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.4:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson119
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.5:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson120
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.6:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson121
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.7:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson122
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.8:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson123
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 6:'''
!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson114
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart114Uu
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart114Test
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> '''Fall 7:'''
!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson113
!define expectedAnswer {}
!define expectedCompareResult {UNAUTHORIZED}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart113Test
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> '''Fall 8:'''
!***> Läs person
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson116
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart116Test
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> '''Fall 9:'''
!***> Läs person
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson117
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart117Test
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
*!

!3 Roller

 * Systemadmin ska kunna läsa
 * det går att lista söka läsa den minsta posten (ID och nån lokalID eller ORCID)
   * Det ska inte gå att läsa raderade personposter

 * När personpost är publik
   * Alla får läsa den och alla fält ska kunnas läsa
 * När person är icke publik
   * Systemadmin, domänadmin får söka, lista och läsa.
 * Guest får bara läsa authorisednamn, får inte lista och söka

 * Person som saknar domän
   * systemadmin får lista söka och läsa
 * domänadmin får lista söka
 * guest söka och läsa
 
 
 Pippi personpost för UU och test domain
!|Comment|
| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | person | authority-person:118 | | OK |


!4 !-SystemAdmin-!
!define currentAuthToken {$systemAdminAuthToken}

 * '''Fall 1:''' Det ska gå att läsa personposter från alla domän och se alla fält.
 * '''Fall 2:''' Det ska gå att läsa personposter från alla domän och se alla fält som är icke publika.
 * '''Fall 3:''' Det ska gå att läsa personposter som saknar domän.
 * '''Fall 4:''' Det ska gå inte att läsa raderade personposter


!***> Fall 1
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!define expectedCompareData originalData
!include -seamless .HelperPages.readCheck

****************************** '''Här är vi....'''
*!
!4 !-DomainAdmin-!
!define currentAuthToken {$domainAdminUUAuthToken}

 * '''Fall 1:''' Det ska gå att läsa personposter från alla domän och se alla fält.
 * '''Fall 2:''' Det ska gå att läsa personposter från alla domän och se alla fält som är icke publika.
 * '''Fall 3:''' Det ska gå att läsa personposter som saknar domän.
 * '''Fall 4:''' Det ska gå inte att läsa raderade personposter

!4 !-Guest-!

 * '''Fall 1:''' Guest får inte läsa födelseår, dödsår, e-postadress och lokalt ID men den får läsa affiliering till organisationer.
 * '''Fall 2:''' Guest får bara läsa authorisedName om personpost är ickePublik 
!define currentAuthToken {$guestToken}

!***> Fall 1
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106

!define expectedAnswer {}
!define expectedCompareResult {födelseår is missing. dödsår is missing, e-postadress is missing, lokalidentifikator is missing }
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!define expectedCompareData originalData
#!include -seamless .HelperPages.readCheck
*!
!***> Fall 2
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson111

!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!define expectedCompareData originalData
#!include -seamless .HelperPages.readCheck
*!
