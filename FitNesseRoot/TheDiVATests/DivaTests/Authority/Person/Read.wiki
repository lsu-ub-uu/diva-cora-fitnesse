---
Test
---
!2 Läsa
Det skall gå att läsa personer via REST API:et och i svaret få med vilka rättigheter den inloggade användaren har både på post och delpostnivå.

!style_red[Kontrollera actionLinks för personer, eftersom vi ännu inte implementerat stöd för att radera en personer, eller läsa incomingLinks från DiVA powered by Cora, så är dessa inte med.]

!***> Läs personer som divaEverything via den och se att fälten är med i svaret

Personpost är byggt med en superpost (personpost) och en subpost (personDomainPart)

!define currentAuthToken {$adminAuthToken}

!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!define expectedExistFieldsResult {OK}
!include -seamless .HelperPages.readCheck
#!include -seamless .HelperPages.existsFieldsOnRecord

*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Kth
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Test
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!

Det ska gå att läsa alla mjöliga kombinationer av personpost som det går att skapa i Classic. Följande fall täcker alla varianter som vi kan forvänta oss att läsa från fedora

 * '''Fall 1:''' Det ska gå att läsa en personpost som är markerat som icke-publikt men som är fullt ifylld så att vi kan se att inget som inte ska komma ut kommer ut, ska det finnas minst en affiliering
 * '''Fall 2:''' Det ska gå att läsa en personpost som är markerat som publikt som är fullt ifylld, ska det finnas minst två personDomainParts med affilieringar
 * '''Fall 3:''' Det ska gå att läsa en personpost som är markerat som publikt men som inte har någon kopplat personDomainPart
 * '''Fall 4:''' Det ska gå att läsa en personpost som har bara det nödvändigaste ifylld ur Cora-perspektiv. (public and authorisedName. Ingen domän definerad)
 * '''Fall 5:''' Det ska gå att läsa en personpost som bara har det nödvändigaste ifylld ur Classic-perspektiv.
   * '''Fall 5.1:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, alla fält är tomma.
   * '''Fall 5.2:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara ORCID 
   * '''Fall 5.3:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara lokalt ID  
   * '''Fall 5.4:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara last name
   * '''Fall 5.5:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara first name  
   * '''Fall 5.6:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara alternative last name
   * '''Fall 5.7:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara alternative first name
   * '''Fall 5.8:''' Det ska gå att läsa en personpost som är minimal skapat via klienten, bara email
 * '''Fall 6:''' Det ska gå att läsa en personpost som är så fel ur Cora-perspektiv vi kan tänka oss kan finnas i Classic. Den behöver inte gå att spara i Cora. (T.ex. ORCID som inte är ORCID, mejl som inte är mejl, URL som inte är URL, etc.)
 * '''Fall 7:''' Det ska inte gå att läsa en personpost som är *raderad*
 * '''Fall 8:''' Det ska gå att läsa en personpost som har en lokal identifikator men inga affilierade organisationer
 * '''Fall 9:''' Det ska gå att läsa en personpost som har ingen lokal identifikator men affilierade organisationer
 
!***> Alla fall
!***> '''Fall 1:'''
!***> Läs personpost

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | person | authority-person:111 | | OK |

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson111
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart111Uu
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck

*!
!***> Läs personDomainPart
!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | personDomainPart | authority-person:111:test | | OK |

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart111Test
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> '''Fall 2:'''
!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson112
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart112Uu
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> '''Fall 3:'''
!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | person | authority-person:110 | | OK |

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson110
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 4:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson115
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.1:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson107
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.2:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson108
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.3:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson109
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.4:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson119
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.5:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson120
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.6:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson121
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.7:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson122
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 5.8:'''
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson123
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> '''Fall 6:'''
!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson114
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart114Uu
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart114Test
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> '''Fall 7:'''
!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson113
!define expectedCompareResult {UNAUTHORIZED}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart113Test
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> '''Fall 8:'''
!***> Läs person
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson116
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart116Test
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> '''Fall 9:'''
!***> Läs person
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson117
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart117Test
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
*!

!3 Roller

 * Systemadmin ska kunna läsa
 * det går att lista söka läsa den minsta posten (ID och nån lokalID eller ORCID)
   * Det ska inte gå att läsa raderade personposter

 * När personpost är publik
   * Alla får läsa den och alla fält ska kunnas läsa
 * När person är icke publik
   * Systemadmin, domänadmin får söka, lista och läsa.
 * Guest får bara läsa authorisednamn, får inte lista och söka

 * Person som saknar domän
   * systemadmin får lista söka och läsa
 * domänadmin får lista söka
 * guest söka och läsa
 
 
!4 !-SystemAdmin-!
!define currentAuthToken {$systemAdminAuthToken}

 * '''Fall 1:''' Det ska gå att läsa personposter se alla fält från alla domäner.
 * '''Fall 2:''' När personpost är icke publik det ska gå att läsa alla fält utan begränsningar. 
 * '''Fall 3:''' Det ska gå att läsa personposter som saknar domän.
# * '''Fall 4:''' Det ska inte gå att läsa raderade personposter

!***> Fall 1
!***> Det ska gå att läsa person med domän (KTH och Test)
!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!define expectedCompareData originalData
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Kth
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Test
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> Det ska gå att läsa person med domän (UU och Test)
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson118
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!define expectedCompareData originalData
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart118Uu
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart118Test
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
*!
!***> Fall 2
!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson111
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart111Uu
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart111Test
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> Fall 3
Personposten har ingen domän, men vi borde ärndå kunna se alla fält. 
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson110
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!4 !-DomainAdmin-!
!define currentAuthToken {$domainAdminUUAuthToken}

 * '''Fall 1:''' Det ska gå att läsa personposter se alla fält från alla domäner.
 * '''Fall 2:''' När personpost är icke publik det ska gå att läsa alla fält utan begränsningar. 
 * '''Fall 3:''' Det ska gå att läsa personposter som saknar domän.
 #* '''Fall 4:''' Det ska inte gå att läsa raderade personposter

!***> Fall 1
En domänAdmin användare för UU får läsa en personpost som är från UU domän.
!***> Det ska gå att läsa person med domän (UU och Test)
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson118
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!define expectedCompareData originalData
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart118Uu
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart118Test
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
En domänAdmin användare för UU får läsa en personpost som är från nån annan domän än UU, t.ex. KTH och Test.
!***> Det ska gå att läsa person med domän (KTH och Test)
!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!define expectedCompareData originalData
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Kth
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Test
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
*!
!***> Fall 2
!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson111
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart111Uu
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart111Test
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> Fall 3
Personposten har ingen domän, men vi borde ärndå kunna se alla fält. 
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson110
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!4 !-Guest-!
!define currentAuthToken {$guestToken}
 * '''Fall 1:''' Guest får inte läsa födelseår, dödsår, e-postadress och lokalt ID men den får läsa affiliering till organisationer.
 * '''Fall 2:''' Guest får bara läsa authorisedName om personpost är ickePublik 
 * '''Fall 3:''' Det ska inte gå att läsa raderade personposter

!***> Fall 1
Guest får läsa från alla domän däremot får inte se födelseår, dödsår, e-postadress och lokalt ID men den får läsa affiliering till organisationer
!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!define expectedCompareResult {Child with nameInData yearOfBirth and type atomic is missing. Child with nameInData yearOfDeath and type atomic is missing. Child with nameInData emailAddress and type atomic is missing.}
!define expectedActionResult { Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Read permission emailAddress is missing. Read permission yearOfBirth is missing. Read permission yearOfDeath is missing. Write permission domain is missing. Write permission academicTitle is missing. Write permission emailAddress is missing. Write permission yearOfBirth is missing. Write permission yearOfDeath is missing. Write permission alternativeName is missing. Write permission externalURL is missing. Write permission otherAffiliation is missing. Write permission ORCID_ID is missing. Write permission VIAF_ID is missing. Write permission Libris_ID is missing. Write permission biographyEnglish is missing. Write permission biographySwedish is missing. Write permission personDomainPart is missing.}
!define expectedCompareData originalData
!include -seamless .HelperPages.readCheck
*!
Det finns ingen lokalid i den här personDomainPart.
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Kth
!define expectedCompareResult {OK}
!define expectedActionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Read permission identifier is missing. Write permission identifier is missing. Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
Det finns lokalid i den här personDomainPart men vi får inte läsa den.
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Test
!define expectedCompareResult {Child with nameInData identifier and type atomic is missing.}
!define expectedActionResult { Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Read permission identifier is missing. Write permission identifier is missing. Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!
!***> Fall 2
!***> Läs personpost
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson111
!define expectedCompareResult {OK}
!define expectedActionResult { Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Read permission domain is missing. Read permission academicTitle is missing. Read permission emailAddress is missing. Read permission yearOfBirth is missing. Read permission yearOfDeath is missing. Read permission alternativeName is missing. Read permission externalURL is missing. Read permission otherAffiliation is missing. Read permission ORCID_ID is missing. Read permission VIAF_ID is missing. Read permission Libris_ID is missing. Read permission biographyEnglish is missing. Read permission biographySwedish is missing. Read permission personDomainPart is missing. Write permission domain is missing. Write permission academicTitle is missing. Write permission emailAddress is missing. Write permission yearOfBirth is missing. Write permission yearOfDeath is missing. Write permission alternativeName is missing. Write permission externalURL is missing. Write permission otherAffiliation is missing. Write permission ORCID_ID is missing. Write permission VIAF_ID is missing. Write permission Libris_ID is missing. Write permission biographyEnglish is missing. Write permission biographySwedish is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart111Uu
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
!***> Läs personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart111Test
!define expectedCompareResult {OK}
!define expectedActionResult { Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission public is missing.}
!include -seamless .HelperPages.readCheck
*!
*!