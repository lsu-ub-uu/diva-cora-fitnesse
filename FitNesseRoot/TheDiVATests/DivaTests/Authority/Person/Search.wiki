---
Test
---
!1 Sök
Det skall gå att söka personer via REST API:et.
 
!***> !-SetUp (Indexerar personer)-!

!define currentAuthToken {$adminAuthToken}
!define recordType {person}
!define expectedResult {CREATED}
!define recordId {authority-person:106}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:107}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:108}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:109}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:110}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:111}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:112}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:114}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:115}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:116}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:117}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:118}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:119}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:120}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:121}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:122}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:123}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:124}
!include -seamless .HelperPages.indexRecordTypeWithId
*!
!***> Sök person som divaEverything. Kontrollerar att vi kan söka person.

!define currentAuthToken {$adminAuthToken}

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!include -seamless .HelperPages.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.checkOriginal
*!
!style_orange[Vilka test fall behöver vi?]
OBS: Just nu sökfunktionen bara hittar ord inte delar av ett ord. Om man vill söka delar av ord bör man ha * i slutet av sökordet.

 * '''Fall 1:''' Det ska gå att söka i personsid, personsnamn, personsnummer  med hjälp av ** (tom söksträng) !style_red[AVSTÄNGT]
 * '''Fall 2:''' Det ska gå att söka med bara en domän !style_red[AVSTÄNGT]
 * '''Fall 3:''' Det ska gå att söka med bara en eller flera personsid !style_red[AVSTÄNGT]
 * '''Fall 4:''' Det ska gå att söka med bara personsnamn !style_red[AVSTÄNGT]
 * '''Fall 5:''' Det ska gå att söka med bara personstyp !style_red[AVSTÄNGT]
 * '''Fall 6:''' Det ska gå att söka med personsnamn även när tecken å, ä eller ö finns i namnet !style_red[AVSTÄNGT]
 * '''Fall 7:''' Det ska gå att söka i kombination av flera fält (domän, personsnamn, personsid, personstyp och personsnummer) !style_red[AVSTÄNGT]

!***> '''Fall 1'''

!-Vi söker id med **-!

!|comment|
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"personIdSearchTerm","value":"**"}]}]}]} | | OK |

!-Vi söker personsnamn med **-!

!|comment|
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divapersonNameSearchTerm","value":"**"}]}]}]} | | OK |

*!
!***> '''Fall 2'''

Vi söker person med domän VTI och sen söker UU domän

!|comment|
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divapersonDomainSearchTerm","value":"kth"}]}]}]} | =~/"name":"id","value":"1456"/ | OK |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divapersonDomainSearchTerm","value":"uu"}]}]}]} | =~/"name":"id","value":"1750".*"name":"id","value":"1748"/ | OK |

Det går inte flera domän samtidigt

!|comment|
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divapersonDomainSearchTerm","value":"kth uu"}]}]}]} | Data is not valid: [Data value:kth uu NOT found in collection:domain] | BAD_REQUEST |

*!
!***> '''Fall 3'''

!-Först söker efter ett ID: 1750, sen söker vi efter två olika ID: 1750 och 1751-!

!|comment|
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"recordIdSearchTerm","value":"1750"}]}]}]} | =~/"name":"id","value":"1750"/ | OK |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"recordIdSearchTerm","value":"1750 1751"}]}]}]} | =~/"totalNo":"2"/ | OK |

*!
!***> '''Fall 4'''

!-Vi söker två ord "Stockholms person" som borde hitta ett person, sen "ingenpersonSomHarDetHärNamnet" som borde inte hitta nån och till slut "Stockholms ingenpersonSomHarDetHärNamnet" som borde hitta också ett person-!

!|comment|
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divapersonNameSearchTerm","value":"Kungliga Tekniska Högskolan"}]}]}]} | =~/"name":"id","value":"1751"/ | OK |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divapersonNameSearchTerm","value":"ingenpersonSomHarDetHärNamnet"}]}]}]} | =~/"totalNo":"0"/ | OK |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divapersonNameSearchTerm","value":"Kungliga ingenpersonSomHarDetHärNamnet"}]}]}]} | =~/"name":"id","value":"1751"/ | OK |

*!
!***> '''Fall 5'''

!-Vi söker ett universitetstyp som borde ge oss vara ett träff-!

!|comment|
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgTypeSearchTerm","value":"university"}]}]}]} | =~/"name":"id","value":"1750"/ | OK |

!-Det skall inte gå att söka flera typ samtidigt-!

!|comment|
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgTypeSearchTerm","value":"university museum"}]}]}]} | Data is not valid: [Data value:university museum NOT found in collection:divapersonOrgType] | BAD_REQUEST |

*!
!***> '''Fall 6'''

!-Vi kollar att det går att söka med å, ä och ö.-!

!|comment|
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divapersonNameSearchTerm","value":"*å*"}]}]}]} | | OK |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divapersonNameSearchTerm","value":"*ä*"}]}]}]} | | OK |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divapersonNameSearchTerm","value":"*ö*"}]}]}]} | | OK |

*!
!***> '''Fall 7'''

!-Vi gör tre sök. Den första med personsnamn och domän, den andra med id och typ och den tredje med personsnamn, domän, id, och typ-!

!|comment|
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divapersonNameSearchTerm","value":"Uppsala*"},{"name":"divapersonDomainSearchTerm","value":"uu"}]}]}]} | =~/"name":"id","value":"1750"/ | OK |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"recordIdSearchTerm","value":"1750"},{"name":"divaOrgTypeSearchTerm","value":"university"}]}]}]} | =~/"name":"id","value":"1750"/ | OK |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divapersonNameSearchTerm","value":"Uppsala*"},{"name":"divapersonDomainSearchTerm","value":"uu"},{"name":"recordIdSearchTerm","value":"1750"},{"name":"divaOrgTypeSearchTerm","value":"university"}]}]}]} | =~/"name":"id","value":"1750"/ | OK |

*!
!3 Roller
!4 !-SystemAdmin-!
!define currentAuthToken {$systemAdminAuthToken}
!-Systemadmin får söka och läsa alla begränsade fält.-!

 * '''Fall 1:''' !-SystemAdmin ska kunna söka en person.-!
 
!***> '''Fall 1:'''

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!include -seamless .HelperPages.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action update is missing. Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission id is missing. Write permission type is missing. Write permission createdBy is missing. Write permission dataDivider is missing. Write permission tsCreated is missing. Write permission updated is missing. Write permission public is missing. Write permission domain is missing. Write permission academicTitle is missing. Write permission emailAddress is missing. Write permission yearOfBirth is missing. Write permission yearOfDeath is missing. Write permission alternativeName is missing. Write permission externalURL is missing. Write permission otherAffiliation is missing. Write permission ORCID_ID is missing. Write permission VIAF_ID is missing. Write permission Libris_ID is missing. Write permission biographyEnglish is missing. Write permission biographySwedish is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.checkOriginal
*!

!4 !-DomainAdmin-!
!define currentAuthToken {$domainAdminUUAuthToken}
!-DomainAdmin får söka och läsa alla begränsade fält från sin egna och andras domäner.-!

 * '''Fall 1:''' !-DomainAdmin ska kunna söka en person.-!
 
!***> '''Fall 1:'''

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!include -seamless .HelperPages.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission id is missing. Write permission type is missing. Write permission createdBy is missing. Write permission dataDivider is missing. Write permission tsCreated is missing. Write permission updated is missing. Write permission public is missing. Write permission domain is missing. Write permission academicTitle is missing. Write permission emailAddress is missing. Write permission yearOfBirth is missing. Write permission yearOfDeath is missing. Write permission alternativeName is missing. Write permission externalURL is missing. Write permission otherAffiliation is missing. Write permission ORCID_ID is missing. Write permission VIAF_ID is missing. Write permission Libris_ID is missing. Write permission biographyEnglish is missing. Write permission biographySwedish is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.checkOriginal
*!
!4 Guest
!define currentAuthToken {$guestToken}
!-Guest får söka men inte läsa begränsade fälten i person oavsett domän.-!

 * '''Fall 1:''' Guest ska kunna söka och läsa en person, oavsett vilken domän den är knuten till.

!***> '''Fall 1:'''

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!include -seamless .HelperPages.searchRecord
!define expectedCompareResult {Child with nameInData createdBy and type group is missing. Did not find a match for child with nameInData yearOfBirth and value 1918. Did not find a match for child with nameInData yearOfDeath and value 2021. Did not find a match for child with nameInData emailAddress and value pippi.langstrump@villekulla.se.}
!define expectedActionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Read permission createdBy is missing. Read permission updated is missing. Read permission emailAddress is missing. Read permission yearOfBirth is missing. Read permission yearOfDeath is missing. Write permission id is missing. Write permission type is missing. Write permission createdBy is missing. Write permission dataDivider is missing. Write permission tsCreated is missing. Write permission updated is missing. Write permission public is missing. Write permission domain is missing. Write permission academicTitle is missing. Write permission emailAddress is missing. Write permission yearOfBirth is missing. Write permission yearOfDeath is missing. Write permission alternativeName is missing. Write permission externalURL is missing. Write permission otherAffiliation is missing. Write permission ORCID_ID is missing. Write permission VIAF_ID is missing. Write permission Libris_ID is missing. Write permission biographyEnglish is missing. Write permission biographySwedish is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.checkOriginal
*!
