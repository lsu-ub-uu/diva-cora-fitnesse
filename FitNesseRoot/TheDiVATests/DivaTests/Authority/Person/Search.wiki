---
Test
---

!1 Sök
Det skall gå att söka personer via REST API:et.

!***> !-SetUp (Indexerar personer)-!

!define currentAuthToken {$adminAuthToken}
!define recordType {person}
!define expectedResult {CREATED}
!define recordId {authority-person:106}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:107}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:108}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:109}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:110}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:111}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:112}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:114}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:115}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:116}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:117}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:118}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:119}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:120}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:121}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:122}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:123}
!include -seamless .HelperPages.indexRecordTypeWithId
!define recordId {authority-person:124}
!include -seamless .HelperPages.indexRecordTypeWithId
*!
!***> Sök person som divaEverything. Kontrollerar att vi kan söka person.

!define currentAuthToken {$adminAuthToken}

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!include -seamless .HelperPages.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.checkOriginal
*!
!style_orange[Vilka test fall behöver vi?]
OBS: Just nu sökfunktionen bara hittar ord inte delar av ett ord. Om man vill söka delar av ord bör man ha * i slutet av sökordet.

  * '''Fall 0a:''' Det ska gå att göra en tom sökning.
  * '''Fall 0b:''' Det ska gå att "paginera" en sökning. 
  
  * '''Fall 1:''' Det ska gå att söka i fritextsök. 
  * '''Fall 1a:''' Det ska gå att söka med hjälp av * (tom söksträng). !style_red[Ej testad] !style_red[OBS!! Bör träffa postId också.]
  * '''Fall 1b:''' Det ska gå att söka med förnamn !style_red[Ej testad]
  * '''Fall 1b:''' Det ska gå att söka med del av förnamn !style_red[Ej testad]
  * '''Fall 1c:''' Det ska gå att söka med efternamn !style_red[Ej testad]
  * '''Fall 1d:''' Det ska gå att söka med alternativt förnamn !style_red[Ej testad]
  * '''Fall 1e:''' Det ska gå att söka med alternativt efternamn !style_red[Ej testad]
  * '''Fall 1f:''' Det ska gå att söka med identifikator postid !style_red[Ej testad]
  * '''Fall 1g:''' Det ska gå att söka med identifikator ORCID !style_red[Ej testad]
  * '''Fall 1h:''' Det ska gå att söka med identifikator VIAF !style_red[Ej testad]
  * '''Fall 1i:''' Det ska gå att söka med identifikator Libris-ID !style_red[Ej testad]
  * '''Fall 1j:''' Det ska gå att söka med annan organisation namn !style_red[Ej testad]
  * '''Fall 1k:''' Det ska gå att söka med annan biografi svenska !style_red[Ej testad]
  * '''Fall 1l:''' Det ska gå att söka med annan biografi engelska !style_red[Ej testad]
 * '''Fall 2:''' Det ska gå att söka i Personnamn
  * '''Fall 2a:''' Det ska gå att söka med hjälp av * (tom söksträng)  !style_red[Ej testad]
  * '''Fall 2b:''' Det ska gå att söka med förnamn  !style_red[Ej testad]
  * '''Fall 2c:''' Det ska gå att söka med efternamn  !style_red[Ej testad]
  * '''Fall 2d:''' Det ska gå att söka med alternativt förnamn !style_red[Ej testad]
  * '''Fall 2e:''' Det ska gå att söka med alternativt efternamn !style_red[Ej testad]
 * '''Fall 3:''' Det ska gå att söka i Identifikatorer
  * '''Fall 3a:''' Det ska gå att söka med hjälp av * (tom söksträng)  !style_red[Ej testad]
  * '''Fall 3b:''' Det ska gå att söka med ORCID id !style_red[Ej testad]
  * '''Fall 3c:''' Det ska gå att söka med VIAF id !style_red[Ej testad]
  * '''Fall 3d:''' Det ska gå att söka med Libris id !style_red[Ej testad]
 * '''Fall 4:''' Det ska gå att söka i Lokalt id !style_red[AVSTÄNGT] 
 * '''Fall 5:''' Det ska gå att söka i Organisation !style_red[AVSTÄNGT] 

 
 Andra fall:
 * Det ska gå att söka med kombination av två olika term (AND)
 * Vill vi hantera OR ?
 * Felaktiga term. 
 * Börja att söka med delar av ord utan att använda * ?
 * Mjölighet att ta bor sök knappen.  


!***> '''Fall 0a'''
!-Vi söker id utan att ange ett värde-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicPersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"personGeneralSearchTerm","value":"*"}]}]}]} | =~/"fromNo":"1".+"totalNo":"16".+"toNo":"16"/ | OK |
*!
!***> '''Fall 0b'''
!-Vi söker id med *. Vi begränsar sökning med 6 rader från start rad 2-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicPersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"personGeneralSearchTerm","value":"*"}]}]},{"name":"rows","value":"6"},{"name":"start","value":"2"}]} |=~/"fromNo":"2".+"totalNo":"16".+"toNo":"7"/ | OK |
*!


!***> '''Fall 1a'''
!-Vi söker id med *-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicPersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"personGeneralSearchTerm","value":"*"}]}]}]} |  | OK |
*!
!***> '''Fall 1b'''
!-Vi söker id med *-!

!|comment|
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"personGeneralSearchTerm","value":"Anders"}]}]}]} | | OK |
*!
!***> '''Fall 1c'''
!-Vi söker id med *-!

!|comment|
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicpersonSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"personGeneralSearchTerm","value":"Celsius"}]}]}]} | | OK |
*!

!3 Roller
!4 !-SystemAdmin-!
!define currentAuthToken {$systemAdminAuthToken}
!-Systemadmin får söka och läsa alla begränsade fält.-!

 * '''Fall 1:''' !-SystemAdmin ska kunna söka en person.-!
 
!***> '''Fall 1:'''

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!include -seamless .HelperPages.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action update is missing. Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission id is missing. Write permission type is missing. Write permission createdBy is missing. Write permission dataDivider is missing. Write permission tsCreated is missing. Write permission updated is missing. Write permission public is missing. Write permission domain is missing. Write permission academicTitle is missing. Write permission emailAddress is missing. Write permission yearOfBirth is missing. Write permission yearOfDeath is missing. Write permission alternativeName is missing. Write permission externalURL is missing. Write permission otherAffiliation is missing. Write permission ORCID_ID is missing. Write permission VIAF_ID is missing. Write permission Libris_ID is missing. Write permission biographyEnglish is missing. Write permission biographySwedish is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.checkOriginal
*!

!4 !-DomainAdmin-!
!define currentAuthToken {$domainAdminUUAuthToken}
!-DomainAdmin får söka och läsa alla begränsade fält från sin egna och andras domäner.-!

 * '''Fall 1:''' !-DomainAdmin ska kunna söka en person.-!
 
!***> '''Fall 1:'''

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!include -seamless .HelperPages.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission id is missing. Write permission type is missing. Write permission createdBy is missing. Write permission dataDivider is missing. Write permission tsCreated is missing. Write permission updated is missing. Write permission public is missing. Write permission domain is missing. Write permission academicTitle is missing. Write permission emailAddress is missing. Write permission yearOfBirth is missing. Write permission yearOfDeath is missing. Write permission alternativeName is missing. Write permission externalURL is missing. Write permission otherAffiliation is missing. Write permission ORCID_ID is missing. Write permission VIAF_ID is missing. Write permission Libris_ID is missing. Write permission biographyEnglish is missing. Write permission biographySwedish is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.checkOriginal
*!
!4 Guest
!define currentAuthToken {$guestToken}
!-Guest får söka men inte läsa begränsade fälten i person oavsett domän.-!

 * '''Fall 1:''' Guest ska kunna söka och läsa en person, oavsett vilken domän den är knuten till.

!***> '''Fall 1:'''

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!include -seamless .HelperPages.searchRecord
!define expectedCompareResult {Child with nameInData createdBy and type group is missing. Child with nameInData updated and type group and repeatId 0 is missing. Child with nameInData updated and type group and repeatId 1 is missing. Did not find a match for child with nameInData yearOfBirth and value 1918. Did not find a match for child with nameInData yearOfDeath and value 2021. Did not find a match for child with nameInData emailAddress and value pippi.langstrump@villekulla.se.}
!define expectedActionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Read permission createdBy is missing. Read permission updated is missing. Read permission emailAddress is missing. Read permission yearOfBirth is missing. Read permission yearOfDeath is missing. Write permission id is missing. Write permission type is missing. Write permission createdBy is missing. Write permission dataDivider is missing. Write permission tsCreated is missing. Write permission updated is missing. Write permission public is missing. Write permission domain is missing. Write permission academicTitle is missing. Write permission emailAddress is missing. Write permission yearOfBirth is missing. Write permission yearOfDeath is missing. Write permission alternativeName is missing. Write permission externalURL is missing. Write permission otherAffiliation is missing. Write permission ORCID_ID is missing. Write permission VIAF_ID is missing. Write permission Libris_ID is missing. Write permission biographyEnglish is missing. Write permission biographySwedish is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.checkOriginal
*!
