---
Test
---
!2 Uppdatera
Det ska vara möjligt att uppdatera Organisation.

 * '''Fall 1:''' Det ska gå att uppdatera person
 * '''Fall 2:''' Det ska gå att uppdatera person domän delen (personDomainParts)
 
!***> Fall 1
!define currentAuthToken {$adminAuthToken}

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
#update
!define expectedUpdateResult {OK}
!define expectedAnswer {}
#Compare
!define expectedCompareResult {OK}

!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {OK}
!include -seamless .HelperPages.updateCheckReadCheckReadCheckReset
*!

!***> Fall 2
!define currentAuthToken {$adminAuthToken}

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Kth
#update
!define expectedUpdateResult {OK}
!define expectedAnswer {}
#Compare
!define expectedCompareResult {OK}

!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {OK}
!include -seamless .HelperPages.updateCheckReadCheckReadCheckReset
*!
 
!3 Roller
!4 !-SystemAdmin-!
!-SystemAdmin får ändra alla person och personDomainParts från alla domäner.-!
 
 * '''Fall 1:''' !-SystemAdmin ska kunna uppdatera en person från alla domäner.-!
 * '''Fall 2:''' !-SystemAdmin ska kunna uppdatera en personDomainParts från alla domäner.-!

!4 !-DomainAdmin-!
!-DomainAdmin får uppdatera alla personer men bara kunna uppdatera personDomainParts som tillhör sin egen domän.-!

 * '''Fall 1:''' !-DomainAdmin ska kunna uppdatera en person från alla domäner.-!
 * '''Fall 2:''' !-DomainAdmin ska kunna uppdatera en personDomainParts från sin egen domän.-!
 * '''Fall 3:''' !-DomainAdmin ska INTE kunna uppdatera en personDomainParts från sin egen domän.-!

!4 Guest
!-Guest får INTE uppdatera personer och inte heller personDomainParts-!
 * '''Fall 1:''' Guest får INTE uppdatera personer.
 * '''Fall 2:''' Guest får INTE uppdatera personeDomainPart.
 
!***> Fall 1
!define currentAuthToken {$userAuthToken}

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106

!define expectedUpdateResult {FORBIDDEN}
!define expectedAnswer {}

Update the record
!include -seamless .HelperPages.updateRecord
*!
!***> Fall 2
!define currentAuthToken {$userAuthToken}

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Test

!define expectedUpdateResult {FORBIDDEN}
!define expectedAnswer {}

Update the record
!include -seamless .HelperPages.updateRecord
*!



