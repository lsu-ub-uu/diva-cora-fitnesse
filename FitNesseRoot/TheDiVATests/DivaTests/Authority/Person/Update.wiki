---
Test
---

!2 Uppdatera
Det ska vara möjligt att uppdatera Person.

En personpost innehåller en lista med länkar till personDomainParts. Ingen användare, oavsett roll, har rättighet att ändra i listan på domäner (i recordInfo) eller länkade personDomainParts. För att kunna lägga till eller ta bort domäner och länkade personDomainParts i personposten behöver man skapa eller radera personDomainParts. 
Vid skapning av en ny personDomainPart kommer servern att lägga till domänen och en länk till den nya personDomainParten i den person post som man länkar till när man skapar en ny personDomainPart.
Vid borttagning av en personDomainPart kommer servern att ta bort domänen och länken till personDomainPart från personPosten som den raderade personDomainParten hör till.
Alla grundfunktionallitet (ej beroende på användare), testas med en användare med alla rättigheter.

!3 Synkronizering i Classic
I varje test ingår också en kontroll av att Cora anropar classic för uppdatering av dess Fedora och omindexering.

!include -seamless .HelperPages.defineAdminAuthToken
!3 Person
 * '''Fall 1A:''' Det ska gå att uppdatera en person
   * Det uppdaterade fältet public ska uppdateras i alla relaterade person domän delar
   * Det ska inte gå att ändra listan på domäner (i recordInfo) 
   * Det ska inte gå att ändra listan på kopplade personDomainParts
 * '''Fall 1B:''' Om ett befintligt "ORCID" tas bort, skall detta ORCID inte tas bort utan vara kvar oförändrat
 * '''Fall 1C:''' Om ett befintligt "ORCID" ändras, skall detta ORCID inte ändras utan vara kvar oförändrat, dessutom skall det man ändrar till läggas till som om det vore nytt (en ändring är i princip en kombination av en borttagning och en tilläggning)

!***> Rensa minet på HttpListener
HttpListener används för att lyssna på anropen som normalt går till Classic, så att vi kan kontrollera att de görs korrekt.
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /empty_memory | 200 | Content-Type: text\/plain;charset=utf-8 | forgot all remembered calls |
*!
!***> Fall 1A Det ska gå att uppdatera en person

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!***> Define expected data
!define expectedUpdateResult {OK}
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
*!
!include -seamless .HelperPages.updateCheckReadCheckReadCheck

!***> Det uppdaterade fältet public ska uppdateras i alla relaterade person domän delar
!define expectedPermissionResult {Write permission public is missing. Write permission domain is missing.}

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Kth
!define expectedCreatedData expectedUpdatedDataTriggeredFromPerson
!include -seamless .HelperPages.readCheck

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Test
!define expectedCreatedData expectedUpdatedDataTriggeredFromPerson
!include -seamless .HelperPages.readCheck
*!
!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | PUT \/fedoraURL\/objects\/authority-person:106\/datastreams\/METADATA\?format\=\?xml\&controlGroup\=M\&logMessage\=coraWritten\&checksumType\=SHA\-512 |
| GET | /getCallNo/1 | 200 | Content-Type: text\/plain;charset=utf-8 | GET \/authorityIndexUrl\/authority\/person\/index\/authority-person:106 |
| GET | /getCallNo/2 | 200 | Content-Type: text\/plain;charset=utf-8 | No call made with no:2, the highest registered call number is:1  |
| GET | /empty_memory | 200 | Content-Type: text\/plain;charset=utf-8 | forgot all remembered calls |
*!

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!include -seamless .HelperPages.resetRecord
!***> Reset HTTP listener classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /empty_memory | 200 | Content-Type: text\/plain;charset=utf-8 | forgot all remembered calls |
*!
*!

!***> Fall 1B Borttagning av ORCID_ID skall ej gå

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson125

!***> Definiera förväntat resultat när vi försöker uppdatera
!define expectedUpdateResult {OK}
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
*!
!include -seamless .HelperPages.updateCheckReadCheckReadCheck

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | PUT \/fedoraURL\/objects\/authority-person:125\/datastreams\/METADATA\?format\=\?xml\&controlGroup\=M\&logMessage\=coraWritten\&checksumType\=SHA\-512 |
| GET | /getCallNo/1 | 200 | Content-Type: text\/plain;charset=utf-8 | GET \/authorityIndexUrl\/authority\/person\/index\/authority-person:125 |
| GET | /getCallNo/2 | 200 | Content-Type: text\/plain;charset=utf-8 | No call made with no:2, the highest registered call number is:1  |
| GET | /empty_memory | 200 | Content-Type: text\/plain;charset=utf-8 | forgot all remembered calls |
*!

Vi behöver inte återställa datat eftersom inget ändrades

#!include -seamless .HelperPages.resetRecord

!***> Reset HTTP listener classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /empty_memory | 200 | Content-Type: text\/plain;charset=utf-8 | forgot all remembered calls |
*!
*!

!***> Fall 1C Ändring av ORCID_ID skall ej gå

!| script | StringSupport |
|$tempOrcid=|dateFormat;|YYYY-MMdd-HHmm-ssss|

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson125

Vi definierar om updateData och exepected to use tempOrcid 
!define updateData updateDataWithTempOrcid

!define expectedUpdatedData expectedUpdatedDataWithTempOrcid

!***> Definiera förväntat resultat när vi försöker uppdatera
!define expectedUpdateResult {OK}
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
*!
!include -seamless .HelperPages.updateCheckReadCheckReadCheck

Vi behöver inte återställa datat eftersom inget ändrades

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | PUT \/fedoraURL\/objects\/authority-person:125\/datastreams\/METADATA\?format\=\?xml\&controlGroup\=M\&logMessage\=coraWritten\&checksumType\=SHA\-512 |
| GET | /getCallNo/1 | 200 | Content-Type: text\/plain;charset=utf-8 | GET \/authorityIndexUrl\/authority\/person\/index\/authority-person:125 |
| GET | /getCallNo/2 | 200 | Content-Type: text\/plain;charset=utf-8 | No call made with no:2, the highest registered call number is:1  |
| GET | /empty_memory | 200 | Content-Type: text\/plain;charset=utf-8 | forgot all remembered calls |
*!
*!



!3 !-Person domän delen-!
Uppdatering av den totala informationen om en person görs genom att personposten uppdateras, eller genom att relaterade personDomainParts läggs till, uppdateras eller tas bort. Därför finns här information om de olika fall som vi behövar ta hänsyn till när man förändrar personDomainParts, genom att lägga till, uppdatera eller ta bort dem. En personDomainPart kan genom hur metadata är uppsatt bara ha en relaterad person.

!4 Lägg till en person domän del
 * '''Fall 2:''' Det ska gå att lägga till en ny person domän del till en befintligt person (publik). (Create personDomainPart).
   * Personposthistoriken utökas med en ny update.
   * Den nya personDomainParten läggs till i listan med länkade person domän delar i personposten.
   * Domänen som personDomainPart tillhör läggs till i domän listan i personposten
   * Värdet på fältet "public" kopieras från person till den nya person domän delen
 * '''Fall 2A:''' Det ska gå att lägga till en ny person domän del till en befintligt person (ej publik). (Create personDomainPart).
   * Värdet på fältet "public" kopieras från person till den nya person domän delen
 * '''Fall 2B:''' Det ska inte gå att lägga till en ny personDomainPart med ett id som inte matchar en befintligt person.
   * Om inte id:et på personDomainPart matchar en befintlig personpost, skall servern svara med BAD_REQUEST
 * '''Fall 2C:''' Det ska inte gå att lägga till en ny personDomainPart, där varken "identifier" eller "affiliation" finns med.
   * Saknas både "identifier" och "affiliation" skall servern svara med BAD_REQUEST
 * '''Fall 2D:''' Det ska inte gå att skapa en ny personDomainPart mer än en gång per domän och person.
   * Vid försök skall servern svara med BAD_REQUEST
 * '''Fall 2E:''' Det ska inte gå att skapa en ny personDomainPart som länkar till en organisation från en annan domän.
   * Vid försök skall servern svara med BAD_REQUEST
   
!***> Fall 2 Det ska gå att lägga till en personDomainPart till en publik person
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Uu
!define expectedCreateResult {CREATED}
!define expectedCompareResult {Child with nameInData personLink and type group is missing.}
!define expectedPermissionResult {Write permission public is missing. Write permission domain is missing.}
!include -seamless .HelperPages.createCheckReadCheck

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!define expectedCreatedData expectedUpdatedDataTriggeredFromPersonDomainPart
!define expectedCompareResult {OK}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | PUT \/fedoraURL\/objects\/authority-person:106\/datastreams\/METADATA\?format\=\?xml\&controlGroup\=M\&logMessage\=coraWritten\&checksumType\=SHA\-512 |
| GET | /getCallNo/1 | 200 | Content-Type: text\/plain;charset=utf-8 | GET \/authorityIndexUrl\/authority\/person\/index\/authority-person:106 |
| GET | /getCallNo/2 | 200 | Content-Type: text\/plain;charset=utf-8 | No call made with no:2, the highest registered call number is:1  |
| GET | /empty_memory | 200 | Content-Type: text\/plain;charset=utf-8 | forgot all remembered calls |
*!
*!

!***> Fall 2A Det ska gå att lägga till en personDomainPart till en ej publik person
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart111Kth
!define expectedCreateResult {CREATED}
!define expectedCompareResult {Did not find a match for child with nameInData public and value yes.}
!define expectedPermissionResult {Write permission public is missing. Write permission domain is missing.}
!include -seamless .HelperPages.createCheckReadCheck

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | PUT \/fedoraURL\/objects\/authority-person:111\/datastreams\/METADATA\?format\=\?xml\&controlGroup\=M\&logMessage\=coraWritten\&checksumType\=SHA\-512 |
| GET | /getCallNo/1 | 200 | Content-Type: text\/plain;charset=utf-8 | GET \/authorityIndexUrl\/authority\/person\/index\/authority-person:111 |
| GET | /getCallNo/2 | 200 | Content-Type: text\/plain;charset=utf-8 | No call made with no:2, the highest registered call number is:1  |
| GET | /empty_memory | 200 | Content-Type: text\/plain;charset=utf-8 | forgot all remembered calls |
*!
*!

!***> Fall 2B Det skall inte gå att skapa en personDomainPart som inte matchar en beffintlig person
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart99999Uu
!define expectedCreateResult {BAD_REQUEST}
!include -seamless .HelperPages.createRecord

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | No calls registered. |
*!
*!

!***> Fall 2C Det skall inte gå att skapa en personDomainPart utan varken identifier eller affiliation
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Liu
!define expectedCreateResult {BAD_REQUEST}
!include -seamless .HelperPages.createRecord

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | No calls registered. |
*!
*!

!***> Fall 2D Det skall inte gå att skapa mer än en personDomainPart per domän och person
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart111Kth
!define expectedCreateResult {CONFLICT}
!define expectedCompareResult {}
!include -seamless .HelperPages.createRecord

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | No calls registered. |
*!
*!

!***> Fall 2E Det skall inte gå att skapa länka till en organisation från en annan domän
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Gih
!define expectedCreateResult {BAD_REQUEST}
!include -seamless .HelperPages.createRecord

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | No calls registered. |
*!
*!

!***> Reset PersonDomainParts som inte behövs i de kommande fall.
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart111Kth
!define expectedDeleteResult {OK}
!include -seamless .HelperPages.deleteRecord

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | PUT \/fedoraURL\/objects\/authority-person:111\/datastreams\/METADATA\?format\=\?xml\&controlGroup\=M\&logMessage\=coraWritten\&checksumType\=SHA\-512 |
| GET | /getCallNo/1 | 200 | Content-Type: text\/plain;charset=utf-8 | GET \/authorityIndexUrl\/authority\/person\/index\/authority-person:111 |
| GET | /getCallNo/2 | 200 | Content-Type: text\/plain;charset=utf-8 | No call made with no:2, the highest registered call number is:1  |
| GET | /empty_memory | 200 | Content-Type: text\/plain;charset=utf-8 | forgot all remembered calls |
*!
*!

!4 Uppdatera en person domän del
 * '''Fall 3:''' Det ska gå att uppdatera person domän delen (personDomainParts) 
 * '''Fall 3A:''' Det ska inte gå att uppdatera en  personDomainPart, där varken "identifier" eller "affiliation" finns med.
   * Saknas både "identifier" och "affiliation" skall servern svara med BAD_REQUEST
 * '''Fall 3B:''' Det ska inte gå att uppdatera id i recordInfo.
 * '''Fall 3C:''' Det ska inte gå att uppdatera en personDomainPart som länkar till en organisation från en annan domän.
   * Vid försök skall servern svara med BAD_REQUEST
 * '''Fall 3D:''' Om ett befintligt "lokalt id" tas bort, skall detta lokala id inte tas bort utan vara kvar oförändrat
 * '''Fall 3E:''' Om fältet "lokalt id" uppdateras, skall lokalt id inte uppdateras utan vara oförändrat, dessutom skall det man ändrar till läggas till som om det vore nytt (en ändring är i princip en kombination av en borttagning och en tilläggning).


!***> Fall 3 Det skall gå att uppdatera personDomainPart
!| script | StringSupport |
|$tempLocalId=|dateFormat;|YYYYMMddHHmmssss|

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart125Uu
!define expectedUpdateResult {OK}
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission public is missing. Write permission domain is missing.}
!include -seamless .HelperPages.updateCheckReadCheckReadCheck

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | PUT \/fedoraURL\/objects\/authority-person:125\/datastreams\/METADATA\?format\=\?xml\&controlGroup\=M\&logMessage\=coraWritten\&checksumType\=SHA\-512 |
| GET | /getCallNo/1 | 200 | Content-Type: text\/plain;charset=utf-8 | GET \/authorityIndexUrl\/authority\/person\/index\/authority-person:125 |
| GET | /getCallNo/2 | 200 | Content-Type: text\/plain;charset=utf-8 | No call made with no:2, the highest registered call number is:1  |
| GET | /empty_memory | 200 | Content-Type: text\/plain;charset=utf-8 | forgot all remembered calls |
*!
*!

!***> Fall 3A Det skall inte gå att uppdatera en personDomainPart utan varken identifier eller affiliation
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Uu
!define expectedUpdateResult {BAD_REQUEST}
!define expectedAnswer {}
!define updateData updateDataNoIdentifierNorAffiliation
!include -seamless .HelperPages.updateRecord

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | No calls registered. |
*!
*!

!***> Fall 3B Det skall inte gå att uppdatera id i recordInfo
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Uu
!define expectedUpdateResult {BAD_REQUEST}
!define expectedAnswer {}
!define updateData updateDataModifiedId
!include -seamless .HelperPages.updateRecord

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | No calls registered. |
*!
*!

!***> Fall 3C Det skall inte gå att länka till en organisation från en annan domän
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Uu
!define expectedUpdateResult {BAD_REQUEST}
!define expectedAnswer {}
!define updateData updateDataOrganisationNotInSameDomain
!include -seamless .HelperPages.updateRecord

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | No calls registered. |
*!
*!

!***> Fall 3D Det skall inte gå att ta bort ett lokaltId
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart125Uu

Vi definierar om updateData att använda updateDataRemoveLocalId 
!define updateData updateDataRemoveLocalId

Vi definierar om expectedUpdatedData så att den förväntar sig samma data som skapades från början 
!define expectedUpdatedData expectedCreatedData

!define expectedUpdateResult {OK}
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission public is missing. Write permission domain is missing.}
!include -seamless .HelperPages.updateCheckReadCheckReadCheck

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | PUT \/fedoraURL\/objects\/authority-person:125\/datastreams\/METADATA\?format\=\?xml\&controlGroup\=M\&logMessage\=coraWritten\&checksumType\=SHA\-512 |
| GET | /getCallNo/1 | 200 | Content-Type: text\/plain;charset=utf-8 | GET \/authorityIndexUrl\/authority\/person\/index\/authority-person:125 |
| GET | /getCallNo/2 | 200 | Content-Type: text\/plain;charset=utf-8 | No call made with no:2, the highest registered call number is:1  |
| GET | /empty_memory | 200 | Content-Type: text\/plain;charset=utf-8 | forgot all remembered calls |
*!
*!

!***> Fall 3E Det skall inte gå att uppdatera ett lokaltId

!| script | StringSupport |
|$tempLocalId=|dateFormat;|YYYYMMddHHmmssss|

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart125Uu

Vi definierar om updateData och exepected to use updateChangeLocalIdData 
!define updateData updateChangeLocalIdData
!define expectedUpdatedData expectedUpdatedChangeLocalIdData

!define expectedUpdateResult {OK}
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission public is missing. Write permission domain is missing.}
!include -seamless .HelperPages.updateCheckReadCheckReadCheck

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | PUT \/fedoraURL\/objects\/authority-person:125\/datastreams\/METADATA\?format\=\?xml\&controlGroup\=M\&logMessage\=coraWritten\&checksumType\=SHA\-512 |
| GET | /getCallNo/1 | 200 | Content-Type: text\/plain;charset=utf-8 | GET \/authorityIndexUrl\/authority\/person\/index\/authority-person:125 |
| GET | /getCallNo/2 | 200 | Content-Type: text\/plain;charset=utf-8 | No call made with no:2, the highest registered call number is:1  |
| GET | /empty_memory | 200 | Content-Type: text\/plain;charset=utf-8 | forgot all remembered calls |
*!
*!

!4 Ta bort en person domän del
 * '''Fall 4A:''' Det ska gå att ta bort en person domän del från en befintligt person. (Delete personDomainPart).
   * Personposthistoriken loggas med en ny update.
   * Person domän delen tas bort från listan med länkade person domän delar i personposten.
   * Domän som personDomainPart tillhör tas bort från domän listan i personposten
 * '''Fall 4B:''' Det skall inte gå att ta bort en personDomainPart som har en eller flera "lokalt id", om man försöker skall servern svara med BAD_REQUEST.

!***> Fall 4A Det skall gå att ta bort en personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Uu
!define expectedDeleteResult {OK}
!include -seamless .HelperPages.deleteRecord

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!define expectedCreatedData expectedUpdatedDataTriggeredFromPersonDomainPart
!define expectedCompareResult {Did not find a match for child with nameInData domain and value uu and repeatId 2. Child with nameInData personDomainPart and type group and repeatId 2 is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission personDomainPart is missing.}
!include -seamless .HelperPages.readCheck

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | PUT \/fedoraURL\/objects\/authority-person:106\/datastreams\/METADATA\?format\=\?xml\&controlGroup\=M\&logMessage\=coraWritten\&checksumType\=SHA\-512 |
| GET | /getCallNo/1 | 200 | Content-Type: text\/plain;charset=utf-8 | GET \/authorityIndexUrl\/authority\/person\/index\/authority-person:106 |
| GET | /getCallNo/2 | 200 | Content-Type: text\/plain;charset=utf-8 | No call made with no:2, the highest registered call number is:1  |
| GET | /empty_memory | 200 | Content-Type: text\/plain;charset=utf-8 | forgot all remembered calls |
*!
*!

!***> Fall 4B Det skall inte gå att ta bort en personDomainPart som har lokaltId
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart125Uu
!define expectedDeleteResult {BAD_REQUEST}
!include -seamless .HelperPages.deleteRecord

!***> Synchronizering till classic
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${httpListenerUrl} |
| GET | /getCallNo/0 | 200 | Content-Type: text\/plain;charset=utf-8 | No calls registered. |
*!
*!

#!3 Dubblethantering (oklart om dessa skall vara med, hur hanterar man att slå ihop inför en dublett borttagning?)
# * '''Fall X:''' Det ska inte gå att lägga till en person med en ORCID som redan finns .!style_red[(Ej implementerad)]
# * '''Fall Z:''' Det ska inte gå att lägga till en personDomainPart med en lokalId i samma domän som redan används av en annan personDomainPart.!style_red[(Ej implementerad)]

!3 Roller 
!4 !-SystemAdmin-! 
!-SystemAdmin får ändra alla person och personDomainParts från alla domäner.-!

 * '''Fall 1:''' !-SystemAdmin ska kunna uppdatera en person i alla domäner.-!
 * '''Fall 2:''' !-SystemAdmin ska kunna lägga till en personDomainPart till en befintligt person i alla domäner.-!
 * '''Fall 3:''' !-SystemAdmin ska kunna uppdatera en personDomainPart i alla domäner.-!
 * '''Fall 4:''' !-SystemAdmin ska kunna ta bort en personDomainPart i alla domäner.-!

!***> Fall 1 Det skall gå att uppdatera en person i alla domäner
!define currentAuthToken {$systemAdminAuthToken}

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!***> Define expected data
!define expectedUpdateResult {OK}
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission id is missing. Write permission type is missing. Write permission createdBy is missing. Write permission dataDivider is missing. Write permission tsCreated is missing. Write permission updated is missing. Write permission domain is missing. Write permission personDomainPart is missing.}
!define expectedCompleteCompareResult {OK}
*!
!include -seamless .HelperPages.updateCheckReadCheckReadCheck

!include -seamless .HelperPages.resetRecord
*!

!***> Fall 2 Det ska gå att lägga till en personDomainPart till en  person
!define currentAuthToken {$systemAdminAuthToken}
!| script | StringSupport |
|$creatingUserId=|dateFormat;|YYYYMMddHHmmssss|
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Uu
#!define creatingUserId = {64}
!define expectedCreateResult {CREATED}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedCompareResult {Child with nameInData personLink and type group is missing.}
!define expectedPermissionResult {Write permission id is missing. Write permission type is missing. Write permission createdBy is missing. Write permission dataDivider is missing. Write permission tsCreated is missing. Write permission updated is missing. Write permission public is missing. Write permission domain is missing.}
!define expectedCreatedData expectedCreatedDataSystemAdmin
!include -seamless .HelperPages.createCheckReadCheck
*!

!***> Fall 3 Det skall gå att uppdatera personDomainPart
!| script | StringSupport |
|$tempLocalId=|dateFormat;|YYYYMMddHHmmssss|

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart125Uu
!define expectedUpdateResult {OK}
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission id is missing. Write permission type is missing. Write permission createdBy is missing. Write permission dataDivider is missing. Write permission tsCreated is missing. Write permission updated is missing. Write permission public is missing. Write permission domain is missing.}
!include -seamless .HelperPages.updateCheckReadCheckReadCheck
*!

!***> Fall 4 Det skall gå att ta bort en personDomainPart
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Uu
!define expectedDeleteResult {OK}
!include -seamless .HelperPages.deleteRecord
*!


!4 !-DomainAdmin-! !style_orange[(Ej konfigurerade eller testade)]
!-DomainAdmin får uppdatera alla personer men bara kunna uppdatera personDomainParts som tillhör sin egen domän.-!

 * '''Fall 1:''' !-DomainAdmin ska kunna uppdatera en person från alla domäner.-!
 * '''Fall 2:''' !-DomainAdmin ska kunna lägga till en personDomainPart till en befintligt person i sin egen domän.-!
 * '''Fall 3:''' !-DomainAdmin ska kunna uppdatera en personDomainPart i sin egen domän.-!
 * '''Fall 4:''' !-DomainAdmin ska kunna ta bort en personDomainPart i sin egen domän.-!
 * '''Fall 5:''' !-DomainAdmin ska INTE kunna lägga till en personDomainPart till en befintligt person från en annan domän.-!
 * '''Fall 6:''' !-DomainAdmin ska INTE kunna uppdatera en personDomainPart från en annan domän.-!
 * '''Fall 7:''' !-DomainAdmin ska INTE kunna ta bort en personDomainPart från en annan domän.-!
 
!***> Fall 1 Det skall gå att uppdatera en person i alla domäner
!define currentAuthToken {$domainAdminUUAuthToken}

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!***> Define expected data
!define expectedUpdateResult {OK}
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission id is missing. Write permission type is missing. Write permission createdBy is missing. Write permission dataDivider is missing. Write permission tsCreated is missing. Write permission updated is missing. Write permission domain is missing. Write permission personDomainPart is missing.}
!define expectedCompleteCompareResult {OK}
*!
!include -seamless .HelperPages.updateCheckReadCheckReadCheck

!include -seamless .HelperPages.resetRecord
*!

!***> Fall 2 Det ska gå att lägga till en personDomainPart till en befintligt person i sin egen domän
!define currentAuthToken {$domainAdminUUAuthToken}
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Uu

!define expectedCreateResult {CREATED}
!define expectedActionResult {Action index is missing. Action read_incoming_links is missing.}
!define expectedCompareResult {Child with nameInData personLink and type group is missing.}
!define expectedPermissionResult {Write permission id is missing. Write permission type is missing. Write permission createdBy is missing. Write permission dataDivider is missing. Write permission tsCreated is missing. Write permission updated is missing. Write permission public is missing. Write permission domain is missing.}
!define expectedCreatedData expectedCreatedDataDomainAdmin
!include -seamless .HelperPages.createCheckReadCheck
*!
!***> Fall 3 Det skall gå att uppdatera personDomainPart till en befintligt person i sin egen domän
!define currentAuthToken {$domainAdminUUAuthToken}
!| script | StringSupport |
|$tempLocalId=|dateFormat;|YYYYMMddHHmmssss|

!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart125Uu
!define expectedUpdateResult {OK}
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission id is missing. Write permission type is missing. Write permission createdBy is missing. Write permission dataDivider is missing. Write permission tsCreated is missing. Write permission updated is missing. Write permission public is missing. Write permission domain is missing.}
!include -seamless .HelperPages.updateCheckReadCheckReadCheck
*!
!***> Fall 4 Det skall gå att ta bort en personDomainPart från en befintlig person från sin egen domän.
!define currentAuthToken {$domainAdminUUAuthToken}
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Uu
!define expectedDeleteResult {OK}
!include -seamless .HelperPages.deleteRecord
*!
!***> Fall 5 Det ska INTE kunna lägga till en personDomainPart till en befintligt person från en annan domän.
!define currentAuthToken {$domainAdminKTHAuthToken}
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Uu
!define expectedCreateResult {FORBIDDEN}
!include -seamless .HelperPages.createRecord
*!
!***> Fall 6 Det ska INTE kunna uppdatera en personDomainPart till en befintligt person från en annan domän.
!define currentAuthToken {$domainAdminKTHAuthToken}
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson125
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart125Uu
!define expectedUpdateResult {FORBIDDEN}
!include -seamless .HelperPages.updateRecord
*!
!***> Fall 7 Det ska INTE kunna ta bort en personDomainPart till en befintligt person från en annan domän.
!define currentAuthToken {$domainAdminKTHAuthToken}
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson125
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart125Uu
!define expectedDeleteResult {FORBIDDEN}
!include -seamless .HelperPages.deleteRecord
*!

!4 Guest
!-Guest får INTE uppdatera personer och inte heller personDomainParts-!

 * '''Fall 1:''' Guest får INTE uppdatera personer.
 * '''Fall 2:''' Guest får INTE lägga till en personDomainPart.
 * '''Fall 3:''' Guest får INTE uppdatera en personDomainPart.
 * '''Fall 4:''' Guest får INTE ta bort en personDomainPart.

!***> Fall 1

!define currentAuthToken {$userAuthToken}
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPerson106
!define expectedUpdateResult {FORBIDDEN}
!define expectedAnswer {}
!include -seamless .HelperPages.updateRecord
*!
!***> Fall 2
!define currentAuthToken {$userAuthToken}
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Test
!define expectedCreateResult {FORBIDDEN}
!define expectedAnswer {}
!include -seamless .HelperPages.createRecord
*!
!***> Fall 3
!define currentAuthToken {$userAuthToken}
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Test
!define expectedUpdateResult {FORBIDDEN}
!define expectedAnswer {}
!include -seamless .HelperPages.updateRecord
*!
!***> Fall 4
!define currentAuthToken {$userAuthToken}
!include -seamless .TheDiVATests.DivaTests.Authority.Person.data.dataPersonDomainPart106Test
!define expectedDeleteResult {FORBIDDEN}
!define expectedAnswer {}
!include -seamless .HelperPages.deleteRecord
*!
