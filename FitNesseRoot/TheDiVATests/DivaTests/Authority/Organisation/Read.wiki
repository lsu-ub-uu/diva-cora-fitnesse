---
Test
---
!2 Läsa
Det skall gå att läsa organisationer via REST API:et.

!***> Läs organisation:1 i  JSON format

Läser och kontrollerar att JSON är korrekt för att bla. se att domain är rätt uppläst ur databasen.

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | divaOrganisation | 1 | {"record":{"data":{"children":[{"children":[{"name":"id","value":"1"},{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"divaOrganisation"}],"name":"type"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"diva"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"coraUser"},{"name":"linkedRecordId","value":"coraUser:4412982402853626"}],"name":"createdBy"},{"name":"tsCreated","value":"2017-01-01T00:00:00.000000Z"},{"repeatId":"0","children":[{"children":[{"name":"linkedRecordType","value":"coraUser"},{"name":"linkedRecordId","value":"coraUser:4412982402853626"}],"name":"updatedBy"},{"name":"tsUpdated","value":"2017-01-01T00:00:00.000000Z"}],"name":"updated"}],"name":"recordInfo"},{"name":"domain","value":"test"},{"children":[{"name":"organisationName","value":"Uppsala universitet"},{"name":"language","value":"sv"}],"name":"name"},{"children":[{"name":"language","value":"en"},{"name":"organisationName","value":"Uppsala University"}],"name":"alternativeName"},{"name":"rootOrganisation","value":"no"},{"name":"organisationType","value":"university"},{"name":"eligible","value":"no"},{"name":"organisationNumber","value":"202100-2932"},{"name":"showInDefence","value":"yes"},{"name":"topLevel","value":"no"},{"name":"showInPortal","value":"yes"}],"name":"organisation"},"actionLinks":{"read":{"requestMethod":"GET","rel":"read","url":"${systemUnderTestUrl}rest/record/divaOrganisation/1","accept":"application/vnd.uub.record+json"},"update":{"requestMethod":"POST","rel":"update","contentType":"application/vnd.uub.record+json","url":"${systemUnderTestUrl}rest/record/divaOrganisation/1","accept":"application/vnd.uub.record+json"},"index":{"requestMethod":"POST","rel":"index","body":{"children":[{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"divaOrganisation"}],"name":"recordType"},{"name":"recordId","value":"1"},{"name":"type","value":"index"}],"name":"workOrder"},"contentType":"application/vnd.uub.record+json","url":"${systemUnderTestUrl}rest/record/workOrder/","accept":"application/vnd.uub.record+json"},"delete":{"requestMethod":"DELETE","rel":"delete","url":"${systemUnderTestUrl}rest/record/divaOrganisation/1"}},"permissions":{"read":["librisId","rootOrganisation","topLevel","domain","showInPortal","showInDefence"],"write":["librisId","rootOrganisation","topLevel","domain","showInPortal","showInDefence"]}}} | OK |

*!
!***> Kontrollera att det går att läsa organisation som saknar alternativt namn

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | divaOrganisation | 1750 | | OK |

*!
!***> Läs organisation som divaEverything och se att fälten ÄR med i svaret

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContainWithValues? |
| $adminAuthToken | divaOrganisation | 1750 | {"children":[{"type":"atomic","name":"domain","value":"uu"},{"type":"atomic","name":"librisId","value":"lib-uu"},{"type":"atomic","name":"rootOrganisation","value":"no"},{"type":"atomic","name":"showInDefence","value":"yes"},{"type":"atomic","name":"topLevel","value":"no"},{"type":"atomic","name":"showInPortal","value":"yes"}]} | | OK |

*!
!3 Roller
!4 !-SystemAdmin-!
 * '''Fall1:''' !-SystemAdmin ska kunna läsa en organisation från alla domän.-!
!***> '''Fall1'''
!-Läs en organisation från domän UU, som en systemAdmin och se att fälten som systemAdmin får läsa ÄR med i svaret-!
(domain, librisId, rootOrganisation, showInDefence, topLevel, showInPortal)

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContainWithValues? |
| $systemAdminAuthToken | divaOrganisation | 1750 | {"children":[{"type":"atomic","name":"domain","value":"uu"},{"type":"atomic","name":"librisId","value":"lib-uu"},{"type":"atomic","name":"rootOrganisation","value":"no"},{"type":"atomic","name":"showInDefence","value":"yes"},{"type":"atomic","name":"topLevel","value":"no"},{"type":"atomic","name":"showInPortal","value":"yes"}]} | | OK |

Vi läser ett organisation från Uppsalas Domän

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $systemAdminAuthToken | divaOrganisation | 1750 | | OK |

Vi läser ett organisation från VTI Domän

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $systemAdminAuthToken | divaOrganisation | 1350 | | OK |

*!
!4 !-DomainAdmin-!
 * '''Fall1:''' !-DomainAdmin ska kunna läsa en organisation, från sin egna domän.-!
 * '''Fall2:''' !-DomainAdmin ska kunna läsa en organisation, från en annan domän.-!

!***> '''Fall1'''

!-Läs en organisation från domän UU, som en domänAdmin från UU och se att fälten som domänAdmin får läsa ÄR med i svaret-!
(domain, librisId, rootOrganisation, showInDefence, topLevel, showInPortal)

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContainWithValues? |
| $domainAdminUUAuthToken | divaOrganisation | 1750 | {"children":[{"type":"atomic","name":"domain","value":"uu"},{"type":"atomic","name":"librisId","value":"lib-uu"},{"type":"atomic","name":"rootOrganisation","value":"no"},{"type":"atomic","name":"showInDefence","value":"yes"},{"type":"atomic","name":"topLevel","value":"no"},{"type":"atomic","name":"showInPortal","value":"yes"}]} | | OK |

*!
!***> '''Fall2'''

!-Läs en organisation från domän KTH, som en domänAdmin från UU och se att fälten som domänAdmin får läsa ÄR med i svaret-!
(domain, librisId, rootOrganisation, showInDefence, topLevel, showInPortal)

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContainWithValues? |
| $domainAdminUUAuthToken | divaOrganisation | 1751 | {"children":[{"type":"atomic","name":"domain","value":"kth"},{"type":"atomic","name":"librisId","value":"lib-kth"},{"type":"atomic","name":"rootOrganisation","value":"no"},{"type":"atomic","name":"showInDefence","value":"yes"},{"type":"atomic","name":"topLevel","value":"no"},{"type":"atomic","name":"showInPortal","value":"yes"}]} | | OK |

*!
!4 Guest
 * '''Fall1:''' Guest ska kunna läsa en organisation, oavsett vilken domän den är knuten till.

!***> '''Fall1'''

Läs en organisation från domän UU, som en guest från UU och se att fälten som guest får läsa ÄR med i svaret
(domain, librisId)

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContainWithValues? |
| $guestToken | divaOrganisation | 1750 | {"children":[{"type":"atomic","name":"domain","value":"uu"},{"type":"atomic","name":"librisId","value":"lib-uu"}]} | | OK |

Läs en organisation från domän UU, som en guest och se att fälten som guest får läsa INTE är med i svaret
(rootOrganisation, showInDefence, topLevel, showInPortal)

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContain? |
| $guestToken | divaOrganisation | 1750 | {"children":[{"type":"atomic","name":"rootOrganisation","value":"no"},{"type":"atomic","name":"showInDefence","value":"yes"},{"type":"atomic","name":"topLevel","value":"no"},{"type":"atomic","name":"showInPortal","value":"yes"}]} | | Child with nameInData rootOrganisation is missing. Child with nameInData showInDefence is missing. Child with nameInData topLevel is missing. Child with nameInData showInPortal is missing. |

*!
