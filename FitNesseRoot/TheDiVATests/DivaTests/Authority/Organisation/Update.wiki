---
Test
---
!2 Uppdatera
Det ska vara möjligt att uppdatera Organisation.
 * '''Fall 1:''' Det ska gå att uppdatera rootOrganisation
 * '''Fall 2:''' Det ska gå att uppdatera commonOrganisation
 
!***> '''Fall1''' 

!-Uppdatera en rootOrganisation från domän UU, som en divaFitnesseEverything och se att alla fält är uppdaterade inklusive de med begränsnigar, utom domain som inte får ändras.-!

(librisId, showInDefence, topLevel, showInPortal)

!define currentAuthToken {$adminAuthToken}
!define expectedUpdateResult {OK}
!define expectedCompareResult {Child with nameInData domain does not have the correct value.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.updateRootOrganisation1748

!define expectedCompareResult {Child with nameInData domain does not have the correct value.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.compareRootOrganisation1748
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.resetRootOrganisation1748
*!
 
!***> '''Fall2''' 

!-Uppdatera en commonOrganisation från domän UU, som en divaFitnesseEverything och se att alla fält är uppdaterade inklusive de med begränsnigar, utom domain som inte får ändras.-!

(librisId, showInDefence, topLevel, showInPortal)

!define currentAuthToken {$adminAuthToken}
!define expectedUpdateResult {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.updateCommonOrganisation1750

!define expectedCompareResult {Child with nameInData domain does not have the correct value.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.compareCommonOrganisation1750
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.resetCommonOrganisation1750
*!

!3 Data valideringar
Parent och predecessor ska vara från samma domän
 * '''Fall1:''' !-Det ska inte gå att lägga till en överordnad organisation som är från en annnan domän-!
 * '''Fall2:''' !-Det ska inte gå att lägga till en tidigare organisation som är från en annnan domän-!

Ingen relation till sig själv
 * '''Fall1:''' !-Det ska inte gå att uppdatera en organisation så att den får sig själv som överordnad organisation-!
 * '''Fall2:''' !-Det ska inte gå att uppdatera en organisation så att den får sig själv som tidigare organisation-!
   
Samma organisation får inte finnas mer än en gång i parent eller predecessor listorna
 * '''Fall1:''' !-Det ska inte gå att lägga till samma organisation som överordnad mer än en gång-!
 * '''Fall2:''' !-Det ska inte gå att lägga till samma organisation som föregående mer än en gång-!
 * '''Fall3:''' !-Det ska inte gå att lägga till samma organisation som föregående och överordnad samtidigt-!
 
Cirkuläraberoenden
 * '''Fall1:''' !-Cirkuläraberoenden via parent.-!
 * '''Fall2:''' !-Cirkuläraberoenden via predecessor.-!
 * '''Fall3:''' !-Cirkuläraberoenden via kombination av parent och predecessor.-!
 
!***> '''Fall1'''
!--!
!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | commonOrganisation | 1 | {"name":"organisation","children":[{"name":"recordInfo","children":[{"name":"id","value":"1"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"commonOrganisation"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"coraUser"},{"name":"linkedRecordId","value":"coraUser:4412982402853626"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"diva"}]},{"name":"tsCreated","value":"2017-01-01T00:00:00.000000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"coraUser"},{"name":"linkedRecordId","value":"coraUser:4412982402853626"}]},{"name":"tsUpdated","value":"2017-01-01T00:00:00.000000Z"}],"repeatId":"0"}]},{"name":"name","children":[{"name":"organisationName","value":"Uppsala universitet"},{"name":"language","value":"sv"}]},{"name":"alternativeName","children":[{"name":"organisationName","value":"Uppsala University"},{"name":"language","value":"en"}]},{"name":"domain","value":"test"},{"name":"organisationType","value":"university"},{"name":"organisationNumber","value":"202100-2932"},{"name":"eligible","value":"no"},{"name":"showInDefence","value":"yes"},{"name":"topLevel","value":"no"},{"name":"showInPortal","value":"yes"},{"name":"parentOrganisation","children":[{"name":"organisationLink","children":[{"name":"linkedRecordType","value":"commonOrganisation"},{"name":"linkedRecordId","value":"1102"}]}],"repeatId":"0"}]} | | OK |

Reset organisation id:1
!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | commonOrganisation | 1 | {"name":"organisation","children":[{"name":"recordInfo","children":[{"name":"id","value":"1"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"commonOrganisation"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"coraUser"},{"name":"linkedRecordId","value":"coraUser:4412982402853626"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"diva"}]},{"name":"tsCreated","value":"2017-01-01T00:00:00.000000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"coraUser"},{"name":"linkedRecordId","value":"coraUser:4412982402853626"}]},{"name":"tsUpdated","value":"2017-01-01T00:00:00.000000Z"}],"repeatId":"0"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"coraUser:490742519075086"}]},{"name":"tsUpdated","value":"2020-11-03T14:52:11.748582Z"}],"repeatId":"1"}]},{"name":"name","children":[{"name":"organisationName","value":"Uppsala universitet"},{"name":"language","value":"sv"}]},{"name":"alternativeName","children":[{"name":"organisationName","value":"Uppsala University"},{"name":"language","value":"en"}]},{"name":"domain","value":"test"},{"name":"organisationType","value":"university"},{"name":"organisationNumber","value":"202100-2932"},{"name":"eligible","value":"no"},{"name":"showInDefence","value":"yes"},{"name":"topLevel","value":"no"},{"name":"showInPortal","value":"yes"}]} | | OK |

*!

!3 Roller
!4 !-SystemAdmin-!
Systemadmin får uppdatera organisationer från alla domäner och i dessa uppdatera alla begränsade fält utom '''domain'''.

 * '''Fall1:''' !-SystemAdmin ska kunna uppdatera en rootOrganisation från alla domäner.-!
 * '''Fall2:''' !-SystemAdmin ska kunna uppdatera en commonOrganisation från alla domäner.-!

!***> '''Fall1'''

!-Uppdatera en rootOrganisation från domän UU, som en systemAdmin och se att alla fält är uppdaterade inklusive de med begränsnigar, utom domain som inte får ändras.-!

(librisId, showInDefence, topLevel, showInPortal)

!define currentAuthToken {$systemAdminAuthToken}
!define expectedUpdateResult {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.updateRootOrganisation1748
domain should not have been changed

!define expectedCompareResult {Child with nameInData domain does not have the correct value.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.compareRootOrganisation1748
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.resetRootOrganisation1748
*!

!***> '''Fall2'''

!-Uppdatera en commonOrganisation från domän UU, som en systemAdmin och se att alla fält är uppdaterade inklusive de med begränsnigar, utom domain som inte får ändras.-!

(librisId, showInDefence, topLevel, showInPortal)

!define currentAuthToken {$systemAdminAuthToken}
!define expectedUpdateResult {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.updateCommonOrganisation1750
domain should not have been changed

!define expectedCompareResult {Child with nameInData domain does not have the correct value.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.compareCommonOrganisation1750
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.resetCommonOrganisation1750

!-Uppdatera en commonOrganisation från domän KTH, som en systemAdmin och se att alla fält är uppdaterade inklusive de med begränsnigar, utom domain som inte får ändras.-!

(librisId, showInDefence, topLevel, showInPortal)

!define currentAuthToken {$systemAdminAuthToken}
!define expectedUpdateResult {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.updateCommonOrganisation1751
domain should not have been changed

!define expectedCompareResult {Child with nameInData domain does not have the correct value.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.compareCommonOrganisation1751
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.resetCommonOrganisation1751

*!
!4 !-DomainAdmin-!
!-DomainAdmin får uppdatera organisationer från sin egen domän, men inget av de fälten med skrivbegränsningar.
-!

 * '''Fall1:''' !-DomainAdmin ska INTE kunna uppdatera en rootOrganisation, oavsett domän.-!
 * '''Fall2:''' !-DomainAdmin ska kunna uppdatera en organisation, från sin egna domän.-!
 * '''Fall3:''' !-DomainAdmin ska INTE kunna uppdatera en organisation, från en annan domän.-!

!***> '''Fall1'''

!-Uppdatera en rootOrganisation från domän UU, som en domainAdmin och se att den inte får uppdateras.-!

!define currentAuthToken {$domainAdminUUAuthToken}
!define expectedUpdateResult {FORBIDDEN}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.updateRootOrganisation1748
*!

!***> '''Fall2'''

!-Updatera en organisation från domän UU, som en domänAdmin från UU och se att fälten som domänAdmin får läsa ÄR ändrade-!
(domain, librisId, showInDefence, topLevel, showInPortal)

!define currentAuthToken {$domainAdminUUAuthToken}
!define expectedUpdateResult {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.updateCommonOrganisation1750
!define expectedCompareResult {Child with nameInData domain does not have the correct value. Child with nameInData librisId does not have the correct value. Child with nameInData showInDefence does not have the correct value. Child with nameInData topLevel does not have the correct value. Child with nameInData showInPortal does not have the correct value.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.compareCommonOrganisation1750
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.resetCommonOrganisation1750
*!
!***> '''Fall3'''

!-Uppdatera en organisation från domän UU, som en domänAdmin från KTH och se att vi inte får ändra organisationen (FORBIDDEN)-!

!define currentAuthToken {$domainAdminKTHAuthToken}
!define expectedUpdateResult {FORBIDDEN}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.updateCommonOrganisation1750

!-Uppdatera en organisation från domän KTH, som en domänAdmin från UU och se att vi inte får ändra organisationen (FORBIDDEN)-!
!define currentAuthToken {$domainAdminUUAuthToken}
!define expectedUpdateResult {FORBIDDEN}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.updateCommonOrganisation1751
*!
!4 Guest
 * '''Fall1:''' Guest får INTE uppdatera organisationer.

!***> '''Fall1'''

Guest får inte uppdatera organisationer, vi förvänatar oss FORBIDDEN som svar.

!define currentAuthToken {$guestToken}
!define expectedUpdateResult {FORBIDDEN}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.updateCommonOrganisation1750
*!
