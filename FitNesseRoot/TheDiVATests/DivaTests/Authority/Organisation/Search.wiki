---
Test
---
!1 Sök
Det skall gå att söka organisationer via REST API:et.

!***> !-SetUp (Indexerar organisationer)-!

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? | getCreatedId? |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1750"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1751"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1748"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1749"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"50"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1350"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1400"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"51"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |

*!
!***> Sök organisation som divaEverything via den abstrakta organisation, rootOrgansiation och commonOrganisation och se att fälten ÄR med i svaret

Sök organisation

!define currentAuthToken {$adminAuthToken}
!define currentDomain {uu}
!define currentId {1750}
!define currentType {organisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
Sök en rootOrganisation

!define currentAuthToken {$adminAuthToken}
!define currentDomain {uu}
!define currentId {1748}
!define currentType {rootorganisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
Sök en commonOrganisation

!define currentAuthToken {$adminAuthToken}
!define currentDomain {uu}
!define currentId {1750}
!define currentType {commonOrganisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
*!
!style_red[Kontrollera actionLinks för organisation, eftersom vi ännu inte implementerat stöd för att läsa incomingLinks från DiVA powered by Cora, så är dessa inte med.]
!***> Sök organisation som divaEverything via den abstrakta organisation, rootOrgansiation och commonOrganisation och se att vi får rätt actionLinks

Sök organisation

!define currentAuthToken {$adminAuthToken}
!define currentRecordType {organisation}
!define currentId {1750}
!define expectedPermissionResult {Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
Sök en rootOrganisation

!define currentAuthToken {$adminAuthToken}
!define currentRecordType {rootOrganisation}
!define currentId {1748}
!define expectedPermissionResult {Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
Sök en commonOrganisation

!define currentAuthToken {$adminAuthToken}
!define currentRecordType {commonOrganisation}
!define currentId {1750}
!define expectedPermissionResult {Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
*!
OBS: Just nu sökfunktionen bara hittar ord inte delar av ett ord. Om man vill söka delar av ord bör man ha * i slutet av sökordet.

 * '''Fall 1:''' Det ska gå att söka i organisationsid, organisationsnamn, organisationsnummer  med hjälp av ** (tom söksträng)
 * '''Fall 2:''' Det ska gå att söka med bara en domän
 * '''Fall 3:''' Det ska gå att söka med bara en eller flera organisationsid
 * '''Fall 4:''' Det ska gå att söka med bara organisationsnummer
 * '''Fall 5:''' Det ska gå att söka med bara organisationsnamn
 * '''Fall 6:''' Det ska gå att söka med bara organisationstyp
 * '''Fall 7:''' Det ska gå att söka med organisationsnamn även när tecken å, ä eller ö finns i namnet
 * '''Fall 8:''' Det ska gå att söka i kombination av flera fält (domän, organisationsnamn, organisationsid, organisationstyp och organisationsnummer)
 * '''Fall 9:''' Det ska gå att söka organisation med hjälp av autosök AVSTÄNGD
 * '''Fall 10:''' Det ska gå att söka organisation söks med autocomplete i registreringsformuläret AVSTÄNGD
 * '''Fall 11:''' Det ska gå att söka organisation utan alternativ namn. SKA VI HANTERA DEN???

!***> '''Fall 1'''

!-Vi söker id med **-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"recordIdSearchTerm","value":"**"}]}]}]} | | OK |

!-Vi söker organisationsnamn med **-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"**"}]}]}]} | | OK |

!-Vi söker organisationsnummer med **-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgNumberSearchTerm","value":"**"}]}]}]} | | OK |

*!
!***> '''Fall 2'''

Vi söker organisation med domän VTI och sen söker UU domän

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationDomainSearchTerm","value":"vti"}]}]}]} | =~/"name":"id","value":"1350"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationDomainSearchTerm","value":"uu"}]}]}]} | =~/"name":"id","value":"1750".*"name":"id","value":"1748"/ | OK |

Det går inte flera domän samtidigt

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationDomainSearchTerm","value":"vti uu"}]}]}]} | Data is not valid: [Data value:vti uu NOT found in collection:domain] | BAD_REQUEST |

*!
!***> '''Fall 3'''

!-Först söker efter ett ID: 1750, sen söker vi efter två olika ID: 1750 och 1751-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"recordIdSearchTerm","value":"1750"}]}]}]} | =~/"name":"id","value":"1750"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"recordIdSearchTerm","value":"1750 1751"}]}]}]} | =~/"totalNo":"2"/ | OK |

*!
!***> '''Fall 4'''

!-Först söker vi hela organisationsnummer 202100-2932 och sen med del av den 202100*-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgNumberSearchTerm","value":"202100-2932"}]}]}]} | =~/"totalNo":"1"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgNumberSearchTerm","value":"202100-29*"}]}]}]} | =~/"totalNo":"2"/ | OK |

!-När vi söker med hela organisationsnumret fast utan bindesträck får vi inget träff.-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgNumberSearchTerm","value":"2021002932"}]}]}]} | =~/"totalNo":"0"/ | OK |

*!
!***> '''Fall 5'''

!-Vi söker två ord "Stockholms organisation" som borde hitta ett organisation, sen "ingenOrganisationSomHarDetHärNamnet" som borde inte hitta nån och till slut "Stockholms ingenOrganisationSomHarDetHärNamnet" som borde hitta också ett organisation-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"Stockholms organisation"}]}]}]} | =~/"name":"id","value":"51"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"ingenOrganisationSomHarDetHärNamnet"}]}]}]} | =~/"totalNo":"0"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"Stockholms ingenOrganisationSomHarDetHärNamnet"}]}]}]} | =~/"name":"id","value":"51"/ | OK |

*!
!***> '''Fall 6'''

!-Vi söker ett universitetstyp som borde ge oss vara ett träff-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgTypeSearchTerm","value":"university"}]}]}]} | =~/"name":"id","value":"1750"/ | OK |

!-Det skall inte gå att söka flera typ samtidigt-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgTypeSearchTerm","value":"university museum"}]}]}]} | Data is not valid: [Data value:university museum NOT found in collection:divaOrganisationOrgType] | BAD_REQUEST |

*!
!***> '''Fall 7'''

!-Vi kollar att det går att söka med å, ä och ö.-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"*å*"}]}]}]} | | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"*ä*"}]}]}]} | | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"*ö*"}]}]}]} | | OK |

*!
!***> '''Fall 8'''

!-Vi gör tre sök. Den första med organisationsnamn och domän, den andra med id, typ och organisationsnummer och den tredje med organisationsnamn, domän, id, typ och organisationsnummer-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"Uppsala*"},{"name":"divaOrganisationDomainSearchTerm","value":"uu"}]}]}]} | =~/"name":"id","value":"1750"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"recordIdSearchTerm","value":"1"},{"name":"divaOrgTypeSearchTerm","value":"university"},{"name":"divaOrgNumberSearchTerm","value":"202100-2932"}]}]}]} | =~/"name":"id","value":"1"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"Uppsala*"},{"name":"divaOrganisationDomainSearchTerm","value":"test"},{"name":"recordIdSearchTerm","value":"1"},{"name":"divaOrgTypeSearchTerm","value":"university"},{"name":"divaOrgNumberSearchTerm","value":"202100-2932"}]}]}]} | =~/"name":"id","value":"1"/ | OK |

*!
!***> '''Fall 9''' AVSTÄNGT

!| comment |
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | | | OK |

*!
!***> '''Fall 10''' AVSTÄNGT

!| comment |
| Sökstöd autocomplete vid registrering av fält som är baserade på listval [[CORA-1013][https://jira.epc.ub.uu.se/browse/CORA-1013]] Listvalen |
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | !-
-! | | OK |

*!
!***> '''Fall 11''' OKLART

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? | getCreatedId? |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1452"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |

Test sök efter organisationen utan alternativt namn, för att se att sökningen fungerar

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"Organisation som saknar alternativt namn"}]}]}]} | =~/"name":"id","value":"1452"/ | OK |

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.resetCommonOrganisation1750
*!
!3 Roller
!4 !-SystemAdmin-!
!-Systemadmin får söka och läsa alla begränsade fält.-!

 * '''Fall 1:''' !-SystemAdmin ska kunna söka en organisation oavsett domän, via den abstrakta organistion och se alla begränsade fält.-!
 * '''Fall 2:''' !-SystemAdmin ska kunna läsa en organisation oavsett domän, som en rootOrganisation och se alla begränsade fält.-!
 * '''Fall 3:''' !-SystemAdmin ska kunna läsa en organisation oavsett domän, som en commonOrganisation och se alla begränsade fält.-!

!***> '''Fall 1'''

!-Vi söker två olika organisationer från två olika domän, KTH och UU.-!

!define currentAuthToken {$systemAdminAuthToken}
!define currentDomain {uu}
!define currentId {1750}
!define currentType {organisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
!define currentAuthToken {$systemAdminAuthToken}
!define currentDomain {kth}
!define currentId {1751}
!define currentType {organisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
*!
!***> '''Fall 2'''

!-Vi söker två olika rootOrganisationer från två olika domän, KTH och UU.-!

!define currentAuthToken {$systemAdminAuthToken}
!define currentDomain {uu}
!define currentId {1748}
!define currentType {rootOrganisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
!define currentAuthToken {$systemAdminAuthToken}
!define currentDomain {kth}
!define currentId {1749}
!define currentType {rootOrganisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
*!
!***> '''Fall 3'''

!-Vi söker två olika organisationer från två olika domän, KTH och UU.-!

!define currentAuthToken {$systemAdminAuthToken}
!define currentDomain {uu}
!define currentId {1750}
!define currentType {commonOrganisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
!define currentAuthToken {$systemAdminAuthToken}
!define currentDomain {kth}
!define currentId {1751}
!define currentType {commonOrganisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
*!
!style_red[Kontrollera actionLinks för organisation, eftersom vi ännu inte implementerat stöd för att läsa incomingLinks från DiVA powered by Cora, så är dessa inte med.]
!***> Sök organisation som divaEverything via den abstrakta organisation, rootOrgansiation och commonOrganisation och se att vi får rätt actionLinks

Sök organisation

!define currentAuthToken {$systemAdminAuthToken}
!define currentRecordType {organisation}
!define currentId {1750}
!define expectedPermissionResult {Action delete is missing. Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
Sök en rootOrganisation

!define currentAuthToken {$systemAdminAuthToken}
!define currentRecordType {rootOrganisation}
!define currentId {1748}
!define expectedPermissionResult {Action delete is missing. Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
Sök en commonOrganisation

!define currentAuthToken {$systemAdminAuthToken}
!define currentRecordType {commonOrganisation}
!define currentId {1750}
!define expectedPermissionResult {Action delete is missing. Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
*!
!4 !-DomainAdmin-!
!-DomainAdmin får söka och läsa alla begränsade fält från sin egna och andra domän.-!

 * '''Fall 1a:''' !-DomainAdmin ska kunna läsa en organisation, och se alla begränsade fält, från sin egna domän.-!
 * '''Fall 1b:''' !-DomainAdmin ska kunna läsa en rootOrganisation, och se alla begränsade fält, från sin egna domän.-!
 * '''Fall 1c:''' !-DomainAdmin ska kunna läsa en commonOrganisation, och se alla begränsade fält, från sin egna domän.-!
 * '''Fall 2a:''' !-DomainAdmin ska kunna läsa en organisation, och se alla begränsade fält, från en annan domän.-!
 * '''Fall 2b:''' !-DomainAdmin ska kunna läsa en rootOrganisation, och se alla begränsade fält, från en annan domän.-!
 * '''Fall 2c:''' !-DomainAdmin ska kunna läsa en commonOrganisation, och se alla begränsade fält, från en annan domän.-!

!***> '''Fall 1a'''

!-Vi ett organisation från UU domän med UU domain admin användare-!

!define currentAuthToken {$domainAdminUUAuthToken}
!define currentDomain {uu}
!define currentId {1750}
!define currentType {organisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
*!
!***> '''Fall 1b'''

!-Vi ett rootOrganisation från UU domän med UU domain admin användare-!

!define currentAuthToken {$domainAdminUUAuthToken}
!define currentDomain {uu}
!define currentId {1748}
!define currentType {rootOrganisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
*!
!***> '''Fall 1c'''

!-Vi ett commonOrganisation från UU domän med UU domain admin användare-!

!define currentAuthToken {$domainAdminUUAuthToken}
!define currentDomain {uu}
!define currentId {1750}
!define currentType {commonOrganisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
*!
!***> '''Fall 2a'''

!-Vi ett organisation från KTH domän med UU domain admin användare-!-!

!define currentAuthToken {$domainAdminUUAuthToken}
!define currentDomain {kth}
!define currentId {1751}
!define currentType {organisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
*!
!***> '''Fall 2b'''

!-Vi ett rootOrganisation från KTH domän med UU domain admin användare-!

!define currentAuthToken {$domainAdminUUAuthToken}
!define currentDomain {kth}
!define currentId {1749}
!define currentType {rootOrganisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
*!
!***> '''Fall 2c'''

!-Vi ett commonOrganisation från KTH domän med UU domain admin användare-!

!define currentAuthToken {$domainAdminUUAuthToken}
!define currentDomain {kth}
!define currentId {1751}
!define currentType {commonOrganisation}
!define expectedCompare {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
*!
!style_red[Kontrollera actionLinks för organisation, eftersom vi ännu inte implementerat stöd för att läsa incomingLinks från DiVA powered by Cora, så är dessa inte med.]
!***> Sök organisation som divaEverything via den abstrakta organisation, rootOrgansiation och commonOrganisation och se att vi får rätt actionLinks

Sök organisation från UU

!define currentAuthToken {$domainAdminUUAuthToken}
!define currentRecordType {organisation}
!define currentId {1750}
!define expectedPermissionResult {Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
Sök en rootOrganisation från UU, får inte uppdatera eftersom det är en rootOrganisation

!define currentAuthToken {$domainAdminUUAuthToken}
!define currentRecordType {rootOrganisation}
!define currentId {1748}
!define expectedPermissionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
Sök en commonOrganisation från UU

!define currentAuthToken {$domainAdminUUAuthToken}
!define currentRecordType {commonOrganisation}
!define currentId {1750}
!define expectedPermissionResult {Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
Sök organisation KTH, får inte uppdatera då det är en organisation på en annan domän

!define currentAuthToken {$domainAdminUUAuthToken}
!define currentRecordType {organisation}
!define currentId {1751}
!define expectedPermissionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
Sök en rootOrganisation från KTH, får inte uppdatera då det är en rootOrganisation som dessutom är på en annan domän

!define currentAuthToken {$domainAdminUUAuthToken}
!define currentRecordType {rootOrganisation}
!define currentId {1749}
!define expectedPermissionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
Sök en commonOrganisation från KTH, får inte uppdatera då det är en organisation på en annan domän

!define currentAuthToken {$domainAdminUUAuthToken}
!define currentRecordType {commonOrganisation}
!define currentId {1751}
!define expectedPermissionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
*!
!4 Guest
!-Guest får söka men inte läsa begränsade fälten i organisation oavsett domän.-!

 * '''Fall 1a:''' Guest ska kunna söka och läsa en organisation, oavsett vilken domän den är knuten till.
 * '''Fall 1b:''' Guest ska kunna söka och läsa en rootOrganisation, oavsett vilken domän den är knuten till.
 * '''Fall 1c:''' Guest ska kunna söka och läsa en commonOrganisation, oavsett vilken domän den är knuten till.

!***> '''Fall 1'''

!define currentAuthToken {$guestToken}
!define currentDomain {uu}
!define currentId {1750}
!define currentType {organisation}
!define expectedCompare {Child with nameInData showInDefence and type atomic is missing. Child with nameInData topLevel and type atomic is missing. Child with nameInData showInPortal and type atomic is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
*!
!***> '''Fall 2'''

!define currentAuthToken {$guestToken}
!define currentDomain {uu}
!define currentId {1748}
!define currentType {rootOrganisation}
!define expectedCompare {Child with nameInData showInDefence and type atomic is missing. Child with nameInData topLevel and type atomic is missing. Child with nameInData showInPortal and type atomic is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
*!
!***> '''Fall 3'''

!define currentAuthToken {$guestToken}
!define currentDomain {uu}
!define currentId {1750}
!define currentType {commonOrganisation}
!define expectedCompare {Child with nameInData showInDefence and type atomic is missing. Child with nameInData topLevel and type atomic is missing. Child with nameInData showInPortal and type atomic is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchCompareOrganisation
*!
!style_red[Kontrollera actionLinks för organisation, eftersom vi ännu inte implementerat stöd för att läsa incomingLinks från DiVA powered by Cora, så är dessa inte med.]
!***> Sök organisation som divaEverything via den abstrakta organisation, rootOrgansiation och commonOrganisation och se att vi får rätt actionLinks

Sök organisation

!define currentAuthToken {$guestToken}
!define currentRecordType {organisation}
!define currentId {1750}
!define expectedPermissionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
Sök en rootOrganisation

!define currentAuthToken {$guestToken}
!define currentRecordType {rootOrganisation}
!define currentId {1748}
!define expectedPermissionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
Sök en commonOrganisation

!define currentAuthToken {$guestToken}
!define currentRecordType {commonOrganisation}
!define currentId {1750}
!define expectedPermissionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!include -seamless .TheDiVATests.DivaTests.checkActionForRecordForSearch
*!
