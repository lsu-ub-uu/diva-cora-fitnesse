---
Test
---
!1 Sök
Det skall gå att söka organisationer via REST API:et.

!***> !-SetUp (Indexerar organisationer)-!

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? | getCreatedId? |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1750"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1751"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1748"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1749"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"50"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1350"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1400"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"51"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |
| $adminAuthToken | workOrder | {"name":"workOrder","children":[{"name":"recordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"organisation"}]},{"name":"recordId","value":"1"},{"name":"type","value":"index"}]} | | CREATED | $createdId2= |

*!
!***> Sök organisation som divaEverything. Kontrollerar att vi kan söka rootOrgansiation och subOrganisation och se att fälten ÄR med i svaret.
!define currentAuthToken {$adminAuthToken}

!-Vi söker ett rootOrganisation från UU domän med divaEverything rol.-!
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataRootOrganisation1748

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal


!-Vi söker ett subOrganisation från UU domän med divaEverything rol.-!
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataCommonOrganisation1750

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal
*!

OBS: Just nu sökfunktionen bara hittar ord inte delar av ett ord. Om man vill söka delar av ord bör man ha * i slutet av sökordet.

 * '''Fall 1:''' Det ska gå att söka i organisationsid, organisationsnamn, organisationsnummer  med hjälp av ** (tom söksträng)
 * '''Fall 2:''' Det ska gå att söka med bara en domän
 * '''Fall 3:''' Det ska gå att söka med bara en eller flera organisationsid
 * '''Fall 4:''' Det ska gå att söka med bara organisationsnummer
 * '''Fall 5:''' Det ska gå att söka med bara organisationsnamn
 * '''Fall 6:''' Det ska gå att söka med bara organisationstyp
 * '''Fall 7:''' Det ska gå att söka med organisationsnamn även när tecken å, ä eller ö finns i namnet
 * '''Fall 8:''' Det ska gå att söka i kombination av flera fält (domän, organisationsnamn, organisationsid, organisationstyp och organisationsnummer)
 * '''Fall 9:''' Det ska gå att söka organisation med hjälp av autosök AVSTÄNGD
 * '''Fall 10:''' Det ska gå att söka organisation söks med autocomplete i registreringsformuläret AVSTÄNGD

!***> '''Fall 1'''

!-Vi söker id med **-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"recordIdSearchTerm","value":"**"}]}]}]} | | OK |

!-Vi söker organisationsnamn med **-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"**"}]}]}]} | | OK |

!-Vi söker organisationsnummer med **-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgNumberSearchTerm","value":"**"}]}]}]} | | OK |

*!
!***> '''Fall 2'''

Vi söker organisation med domän VTI och sen söker UU domän

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationDomainSearchTerm","value":"vti"}]}]}]} | =~/"name":"id","value":"1350"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationDomainSearchTerm","value":"uu"}]}]}]} | =~/"name":"id","value":"1750".*"name":"id","value":"1748"/ | OK |

Det går inte flera domän samtidigt

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationDomainSearchTerm","value":"vti uu"}]}]}]} | Data is not valid: [Data value:vti uu NOT found in collection:domain] | BAD_REQUEST |

*!
!***> '''Fall 3'''

!-Först söker efter ett ID: 1750, sen söker vi efter två olika ID: 1750 och 1751-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"recordIdSearchTerm","value":"1750"}]}]}]} | =~/"name":"id","value":"1750"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"recordIdSearchTerm","value":"1750 1751"}]}]}]} | =~/"totalNo":"2"/ | OK |

*!
!***> '''Fall 4'''

!-Först söker vi hela organisationsnummer 202100-2932 och sen med del av den 202100*-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgNumberSearchTerm","value":"202100-2932"}]}]}]} | =~/"totalNo":"1"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgNumberSearchTerm","value":"202100-29*"}]}]}]} | =~/"totalNo":"2"/ | OK |

!-När vi söker med hela organisationsnumret fast utan bindesträck får vi inget träff.-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgNumberSearchTerm","value":"2021002932"}]}]}]} | =~/"totalNo":"0"/ | OK |

*!
!***> '''Fall 5'''

!-Vi söker två ord "Stockholms organisation" som borde hitta ett organisation, sen "ingenOrganisationSomHarDetHärNamnet" som borde inte hitta nån och till slut "Stockholms ingenOrganisationSomHarDetHärNamnet" som borde hitta också ett organisation-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"Stockholms organisation"}]}]}]} | =~/"name":"id","value":"51"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"ingenOrganisationSomHarDetHärNamnet"}]}]}]} | =~/"totalNo":"0"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"Stockholms ingenOrganisationSomHarDetHärNamnet"}]}]}]} | =~/"name":"id","value":"51"/ | OK |

*!
!***> '''Fall 6'''

!-Vi söker ett universitetstyp som borde ge oss vara ett träff-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgTypeSearchTerm","value":"university"}]}]}]} | =~/"name":"id","value":"1750"/ | OK |

!-Det skall inte gå att söka flera typ samtidigt-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrgTypeSearchTerm","value":"university museum"}]}]}]} | Data is not valid: [Data value:university museum NOT found in collection:divaOrganisationOrgType] | BAD_REQUEST |

*!
!***> '''Fall 7'''

!-Vi kollar att det går att söka med å, ä och ö.-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"*å*"}]}]}]} | | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"*ä*"}]}]}]} | | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"*ö*"}]}]}]} | | OK |

*!
!***> '''Fall 8'''

!-Vi gör tre sök. Den första med organisationsnamn och domän, den andra med id, typ och organisationsnummer och den tredje med organisationsnamn, domän, id, typ och organisationsnummer-!

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"Uppsala*"},{"name":"divaOrganisationDomainSearchTerm","value":"uu"}]}]}]} | =~/"name":"id","value":"1750"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"recordIdSearchTerm","value":"1"},{"name":"divaOrgTypeSearchTerm","value":"university"},{"name":"divaOrgNumberSearchTerm","value":"202100-2932"}]}]}]} | =~/"name":"id","value":"1"/ | OK |
| $adminAuthToken | publicOrganisationSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"divaOrganisationNameSearchTerm","value":"Uppsala*"},{"name":"divaOrganisationDomainSearchTerm","value":"test"},{"name":"recordIdSearchTerm","value":"1"},{"name":"divaOrgTypeSearchTerm","value":"university"},{"name":"divaOrgNumberSearchTerm","value":"202100-2932"}]}]}]} | =~/"name":"id","value":"1"/ | OK |

*!
!***> '''Fall 9''' AVSTÄNGT

!| comment |
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | | | OK |

*!
!***> '''Fall 10''' AVSTÄNGT

!| comment |
| Sökstöd autocomplete vid registrering av fält som är baserade på listval [[CORA-1013][https://jira.epc.ub.uu.se/browse/CORA-1013]] Listvalen |
| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | publicOrganisationSearch | !-
-! | | OK |

*!
!3 Roller
!4 !-SystemAdmin-!
!-Systemadmin får söka och läsa alla begränsade fält.-!

 * '''Fall 1:''' !-SystemAdmin ska kunna läsa en organisation oavsett domän, en rootOrganisation och se alla begränsade fält.-!
 * '''Fall 2:''' !-SystemAdmin ska kunna läsa en organisation oavsett domän, en subOrganisation och se alla begränsade fält.-!

!define currentAuthToken {$systemAdminAuthToken}
!***> '''Fall 1'''

!-Vi söker två olika rootOrganisationer från två olika domän, KTH och UU.-!

Domain UU
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataRootOrganisation1748
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal

Domain KTH
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataRootOrganisation1749
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal
*!
!***> '''Fall 2'''

!-Vi söker två olika organisationer från två olika domän, KTH och UU.-!
Domain UU
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataCommonOrganisation1750
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal

Domain KTH
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataCommonOrganisation1751
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal
*!

!4 !-DomainAdmin-!
!-DomainAdmin får söka och läsa alla begränsade fält från sin egna och andras domäner.-!

 * '''Fall 1:''' !-DomainAdmin ska kunna läsa en rootOrganisation, och se alla begränsade fält, från sin egna domän.-!
 * '''Fall 2:''' !-DomainAdmin ska kunna läsa en subOrganisation, och se alla begränsade fält, från sin egna domän.-!
 
 * '''Fall 3:''' !-DomainAdmin ska kunna läsa en rootOrganisation, och se alla begränsade fält, från en annan domän.-!
 * '''Fall 4:''' !-DomainAdmin ska kunna läsa en subOrganisation, och se alla begränsade fält, från en annan domän.-!

!define currentAuthToken {$domainAdminUUAuthToken}

!***> '''Fall 1'''
!-Vi ett rootOrganisation från UU domän med UU domain admin användare-!
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataRootOrganisation1748

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission showInDefence is missing. Write permission topLevel is missing. Write permission showInPortal is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal
*!
!***> '''Fall 2'''
!-Vi ett subOrganisation från UU domän med UU domain admin användare-!
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataCommonOrganisation1750

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission showInDefence is missing. Write permission topLevel is missing. Write permission showInPortal is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal
*!
!***> '''Fall 3'''
!-Vi ett rootOrganisation från KTH domän med UU domain admin användare-!
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataRootOrganisation1749

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission showInDefence is missing. Write permission topLevel is missing. Write permission showInPortal is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal
*!
!***> '''Fall 4'''
!-Vi ett subOrganisation från KTH domän med UU domain admin användare-!
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataCommonOrganisation1751

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchRecord
!define expectedCompareResult {OK}
!define expectedActionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing. Write permission showInDefence is missing. Write permission topLevel is missing. Write permission showInPortal is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal
*!

!4 Guest
!-Guest får söka men inte läsa begränsade fälten i organisation oavsett domän.-!

 * '''Fall 1:''' Guest ska kunna söka och läsa en rootOrganisation, oavsett vilken domän den är knuten till.
 * '''Fall 2:''' Guest ska kunna söka och läsa en subOrganisation, oavsett vilken domän den är knuten till.

!define currentAuthToken {$guestToken}
!***> '''Fall 1'''
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataRootOrganisation1748

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchRecord
!define expectedCompareResult {Child with nameInData showInDefence and type atomic is missing. Child with nameInData topLevel and type atomic is missing. Child with nameInData showInPortal and type atomic is missing.}
!define expectedActionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Read permission showInDefence is missing. Read permission topLevel is missing. Read permission showInPortal is missing. Write permission domain is missing. Write permission showInDefence is missing. Write permission topLevel is missing. Write permission showInPortal is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal
*!
!***> '''Fall 2'''
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataCommonOrganisation1750

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.searchRecord
!define expectedCompareResult {Child with nameInData showInDefence and type atomic is missing. Child with nameInData topLevel and type atomic is missing. Child with nameInData showInPortal and type atomic is missing.}
!define expectedActionResult {Action update is missing. Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Read permission showInDefence is missing. Read permission topLevel is missing. Read permission showInPortal is missing. Write permission domain is missing. Write permission showInDefence is missing. Write permission topLevel is missing. Write permission showInPortal is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal
*!