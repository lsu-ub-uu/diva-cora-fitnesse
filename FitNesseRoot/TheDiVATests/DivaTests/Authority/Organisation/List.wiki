---
Help: Lista
Static
---
!2 Lista
Det skall gå att lista organisationer via REST API:et.
 * '''Fall1:''' !-Det ska gå att lista organisationer, via den abstrakta organisation-!
 * '''Fall2:''' !-Det ska gå att lista organisationer, som är rootOrganisationer-!
 * '''Fall3:''' !-Det ska gå att lista organisationer, som är topOrganisationer -!
 * '''Fall4:''' !-Det ska gå att lista organisationer, som är subOrganisationer -!
 

!define currentAuthToken {$everythingAuthToken}


!***>  '''Fall1'''
Lista organisationer inloggad som divaEverything användare, via den abstrakta organisation. Listan bör innehålla alla tre organisationtyper (rootOrganisation, topOrganisation och subOrganisation)
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataTopOrganisation1750
!define recordType {organisation}
!define expectedListResult {=~/^(?=.*"name":"linkedRecordId","value":"rootOrganisation")(?=.*"name":"linkedRecordId","value":"topOrganisation")(?=.*"name":"linkedRecordId","value":"subOrganisation").*$/}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.listStoreRecord

Säkerställ att den sparade datan överensstämmer med originaldatan.
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal

*!
!***>  '''Fall2'''
Lista rootOrganisationer inloggad som divaEverything användare. Listan bör innehålla bara rootOrganisationer.

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataRootOrganisation1748
!define recordType {rootOrganisation}
!define expectedListResult {=~/^(?=.*"name":"linkedRecordId","value":"rootOrganisation")(?!.*"name":"linkedRecordId","value":"topOrganisation")(?!.*"name":"linkedRecordId","value":"subOrganisation").*$/}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.listStoreRecord

Säkerställ att den sparade datan överensstämmer med originaldatan.
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal

*!
!***>  '''Fall3'''
Lista topOrganisationer inloggad som divaEverything användare. Listan bör innehålla bara topOrganisationer.

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataTopOrganisation1750
!define recordType {topOrganisation}
!define expectedListResult {=~/^(?!.*"name":"linkedRecordId","value":"rootOrganisation")(?=.*"name":"linkedRecordId","value":"topOrganisation")(?!.*"name":"linkedRecordId","value":"subOrganisation").*$/}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.listStoreRecord

Säkerställ att den sparade datan överensstämmer med originaldatan.
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal

*!
!***>  '''Fall4'''
Lista subOrganisationer inloggad som divaEverything användare. Listan bör innehålla bara subOrganisationer.
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataSubOrganisation1455
!define recordType {subOrganisation}
!define expectedListResult {=~/^(?!.*"name":"linkedRecordId","value":"rootOrganisation")(?!.*"name":"linkedRecordId","value":"topOrganisation")(?=.*"name":"linkedRecordId","value":"subOrganisation").*$/}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.listStoreRecord

Säkerställ att den sparade datan överensstämmer med originaldatan.
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {OK}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal

*!

!3 Roller
!4 !-SystemAdmin-!
 * '''Fall1:''' !-SystemAdmin ska kunna lista organisationer, via den abstrakta organisation-!
 * '''Fall2:''' !-SystemAdmin ska kunna lista organisationer, som är rootOrganisationer-!
 * '''Fall3:''' !-SystemAdmin ska kunna lista organisationer, som är topOrganisationer -!
 * '''Fall4:''' !-SystemAdmin ska kunna lista organisationer, som är subOrganisationer -!

!define currentAuthToken {$systemAdminAuthToken}
 
!***> '''Fall1'''
Listan bör innehålla alla tre organisationtyper (rootOrganisation, topOrganisation och subOrganisation) och den bör också innehålla organisationer från båda UU och KTH.

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataTopOrganisation1750
!define recordType {organisation}
!define expectedListResult {=~/^(?=.*"name":"linkedRecordId","value":"rootOrganisation")(?=.*"name":"linkedRecordId","value":"topOrganisation")(?=.*"name":"linkedRecordId","value":"subOrganisation")(?=.*"name":"domain","value":"uu")(?=.*"name":"domain","value":"kth").*$/}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.listStoreRecord

Säkerställ att den sparade datan överensstämmer med originaldatan.
!define expectedCompareResult {OK}
!define expectedActionResult {Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal

*!
!***> '''Fall2'''
Listan bör innehålla bara rootOrganisationer. Listan bör innehålla organisationer från båda UU och KTH.

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataRootOrganisation1748
!define recordType {rootOrganisation}
!define expectedListResult {=~/^(?=.*"name":"linkedRecordId","value":"rootOrganisation")(?!.*"name":"linkedRecordId","value":"topOrganisation")(?!.*"name":"linkedRecordId","value":"subOrganisation")(?=.*"name":"domain","value":"uu")(?=.*"name":"domain","value":"kth").*$/}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.listStoreRecord

Säkerställ att den sparade datan överensstämmer med originaldatan.
!define expectedCompareResult {OK}
!define expectedActionResult {Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal

*!
!***> '''Fall3'''
Listan bör innehålla bara topOrganisationer. Listan bör innehålla organisationer från båda UU och KTH.

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataTopOrganisation1750
!define recordType {topOrganisation}
!define expectedListResult {=~/^(?!.*"name":"linkedRecordId","value":"rootOrganisation")(?=.*"name":"linkedRecordId","value":"topOrganisation")(?!.*"name":"linkedRecordId","value":"subOrganisation")(?=.*"name":"domain","value":"uu")(?=.*"name":"domain","value":"kth").*$/}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.listStoreRecord

Säkerställ att den sparade datan överensstämmer med originaldatan.
!define expectedCompareResult {OK}
!define expectedActionResult {Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal

*!
!***> '''Fall4'''
Listan bör innehålla bara subOrganisationer. Listan bör innehålla organisationer från båda UU och KTH.

!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.dataSubOrganisation1455
!define recordType {subOrganisation}
!define expectedListResult {=~/^(?!.*"name":"linkedRecordId","value":"rootOrganisation")(?!.*"name":"linkedRecordId","value":"topOrganisation")(?=.*"name":"linkedRecordId","value":"subOrganisation")(?=.*"name":"domain","value":"uu")(?=.*"name":"domain","value":"kth").*$/}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.listStoreRecord

Säkerställ att den sparade datan överensstämmer med originaldatan.
!define expectedCompareResult {OK}
!define expectedActionResult {Action delete is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Write permission domain is missing.}
!include -seamless .TheDiVATests.DivaTests.Authority.Organisation.checkOriginal

*!
!4 !-DomainAdmin-!
 * '''Fall1:''' !-DomainAdmin ska inte kunna lista organisationer, varken abstrakta, root, top eller sub-!

!***> '''Fall1'''

!| RecordEndpointFixture |
| authToken | type | testReadRecordList? | getStatusType? |
| $domainAdminUUAuthToken | organisation | | FORBIDDEN |
| $domainAdminUUAuthToken | organisation | | FORBIDDEN |
| $domainAdminUUAuthToken | organisation | | FORBIDDEN |
| $domainAdminUUAuthToken | organisation | | FORBIDDEN |

*!
!4 Guest
 * '''Fall1:''' Guest ska inte kunna lista organisationer, varken abstrakta, root, top eller sub

!***> '''Fall1'''

!| RecordEndpointFixture |
| authToken | type | testReadRecordList? | getStatusType? |
| $guestToken | organisation | | FORBIDDEN |
| $guestToken | organisation | | FORBIDDEN |
| $guestToken | organisation | | FORBIDDEN |
| $guestToken | organisation | | FORBIDDEN |

*!