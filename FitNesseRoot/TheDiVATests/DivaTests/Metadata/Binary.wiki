---
Test
---
!1 Binary
The Binary record type is used to manage binary data files.

!2 Binary record type
Metadata group for binary data

!3 Definitions for binary
!***< Setup alvin-record definition
!define binaryDefinition {!-binary type:{generic, image, sound, video, document, text, compressed} (group)
	recordInfo (group, 1-1, noConstraint)
		id (textVariable, 0-1, noConstraint, I)
		type (recordLink, 0-1, noConstraint)
		validationType (recordLink, 1-1, noConstraint)
		dataDivider (recordLink, 1-1, noConstraint)
		createdBy (recordLink, 0-1, noConstraint)
		permissionUnit (recordLink, 0-X, noConstraint)
		tsCreated (textVariable, 0-1, noConstraint)
		updated (group, 0-X, noConstraint)
			updatedBy (recordLink, 1-1, noConstraint)
			tsUpdated (textVariable, 1-1, noConstraint)
	adminInfo (group, 1-1, noConstraint)
		visibility (collectionVariable, 1-1, noConstraint, P)
		tsVisibility (textVariable, 0-1, write)
	master (group, 0-1, write)
		originalFileName (textVariable, 1-1, noConstraint)
		resourceId (textVariable, 1-1, readWrite)
		master (resourceLink, 1-1, noConstraint)
		fileSize (numberVariable, 1-1, noConstraint)
		mimeType (textVariable, 1-1, noConstraint)
		width (numberVariable, 0-1, noConstraint)
		height (numberVariable, 0-1, noConstraint)
		resolution (textVariable, 0-1, noConstraint)
		checksum (textVariable, 0-1, noConstraint)
		checksumType {SHA-512} (textVariable, 0-1, noConstraint)
	thumbnail (group, 0-1, write)
		resourceId (textVariable, 1-1, readWrite)
		thumbnail (resourceLink, 1-1, noConstraint)
		fileSize (numberVariable, 1-1, noConstraint)
		mimeType (textVariable, 1-1, noConstraint)
		height (numberVariable, 1-1, noConstraint)
		width (numberVariable, 1-1, noConstraint)
	medium (group, 0-1, write)
		resourceId (textVariable, 1-1, readWrite)
		medium (resourceLink, 1-1, noConstraint)
		fileSize (numberVariable, 1-1, noConstraint)
		mimeType (textVariable, 1-1, noConstraint)
		height (numberVariable, 1-1, noConstraint)
		width (numberVariable, 1-1, noConstraint)
	large (group, 0-1, write)
		resourceId (textVariable, 1-1, readWrite)
		large (resourceLink, 1-1, noConstraint)
		fileSize (numberVariable, 1-1, noConstraint)
		mimeType (textVariable, 1-1, noConstraint)
		height (numberVariable, 1-1, noConstraint)
		width (numberVariable, 1-1, noConstraint)
	jp2 (group, 0-1, write)
		resourceId (textVariable, 1-1, readWrite)
		jp2 (resourceLink, 1-1, noConstraint)
		fileSize (numberVariable, 1-1, noConstraint)
		mimeType (textVariable, 1-1, noConstraint)
		height (numberVariable, 1-1, noConstraint)
		width (numberVariable, 1-1, noConstraint)
	expectedFileSize (numberVariable, 0-1, noConstraint)
	expectedChecksum (textVariable, 0-1, noConstraint)
	originalFileName (textVariable, 0-1, noConstraint)-!}
*!
!*** '''Definition for binary'''
{{{
${binaryDefinition}
}}}
*!
!include -seamless .TheDiVATests.DivaTests.Metadata.Binary.GenericBinary.ValidationType
----
!2 Binary tests
!include -seamless .TheDiVATests.DivaTests.Metadata.Binary.DefinitionTest
!include -seamless .TheDiVATests.DivaTests.Metadata.Binary.TestEnv.Setup
!include -seamless .TheDiVATests.DivaTests.Metadata.Binary.GenericBinary.Read
!include -seamless .TheDiVATests.DivaTests.Metadata.Binary.Data.BinaryData
!include -seamless .TheDiVATests.DivaTests.Metadata.Binary.Iiif.Iiif
!include -seamless .TheDiVATests.DivaTests.Metadata.Binary.TestEnv.Teardown